{"version":3,"file":"featbit-js-client-sdk.js","mappings":"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","sources":["webpack://@featbit/js-client-sdk/webpack/universalModuleDefinition","webpack://@featbit/js-client-sdk/./src/Configuration.ts","webpack://@featbit/js-client-sdk/./src/Context.ts","webpack://@featbit/js-client-sdk/./src/FbClientBuilder.ts","webpack://@featbit/js-client-sdk/./src/FbClientCore.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/JsonBootstrapProvider.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/NullBootstrapProvider.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/index.ts","webpack://@featbit/js-client-sdk/./src/constants.ts","webpack://@featbit/js-client-sdk/./src/data-sources/DataSourceUpdates.ts","webpack://@featbit/js-client-sdk/./src/data-sources/NamespacedDataSet.ts","webpack://@featbit/js-client-sdk/./src/data-sources/createStreamListeners.ts","webpack://@featbit/js-client-sdk/./src/data-sources/index.ts","webpack://@featbit/js-client-sdk/./src/data-sync/DataSyncMode.ts","webpack://@featbit/js-client-sdk/./src/data-sync/NullDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/PollingDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/Requestor.ts","webpack://@featbit/js-client-sdk/./src/data-sync/WebSocketDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/index.ts","webpack://@featbit/js-client-sdk/./src/data-sync/types.ts","webpack://@featbit/js-client-sdk/./src/data-sync/utils.ts","webpack://@featbit/js-client-sdk/./src/errors.ts","webpack://@featbit/js-client-sdk/./src/evaluation/EvalResult.ts","webpack://@featbit/js-client-sdk/./src/evaluation/Evaluator.ts","webpack://@featbit/js-client-sdk/./src/evaluation/ReasonKinds.ts","webpack://@featbit/js-client-sdk/./src/evaluation/data/IFlag.ts","webpack://@featbit/js-client-sdk/./src/evaluation/data/index.ts","webpack://@featbit/js-client-sdk/./src/evaluation/index.ts","webpack://@featbit/js-client-sdk/./src/evaluation/operator.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventProcessor.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventQueue.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventSender.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventSerializer.ts","webpack://@featbit/js-client-sdk/./src/events/EventDispatcher.ts","webpack://@featbit/js-client-sdk/./src/events/IEventSender.ts","webpack://@featbit/js-client-sdk/./src/events/NullEventProcessor.ts","webpack://@featbit/js-client-sdk/./src/events/event.ts","webpack://@featbit/js-client-sdk/./src/events/index.ts","webpack://@featbit/js-client-sdk/./src/index.ts","webpack://@featbit/js-client-sdk/./src/logging/BasicLogger.ts","webpack://@featbit/js-client-sdk/./src/logging/SafeLogger.ts","webpack://@featbit/js-client-sdk/./src/logging/format.ts","webpack://@featbit/js-client-sdk/./src/logging/index.ts","webpack://@featbit/js-client-sdk/./src/options/ClientContext.ts","webpack://@featbit/js-client-sdk/./src/options/OptionMessages.ts","webpack://@featbit/js-client-sdk/./src/options/UserBuilder.ts","webpack://@featbit/js-client-sdk/./src/options/Validators.ts","webpack://@featbit/js-client-sdk/./src/options/index.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserInfo.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserPlatform.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserRequests.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserWebSocket.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/FbClient.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/LocalStorageStore.ts","webpack://@featbit/js-client-sdk/./src/platform/index.ts","webpack://@featbit/js-client-sdk/./src/store/DataKinds.ts","webpack://@featbit/js-client-sdk/./src/store/InMemoryStore.ts","webpack://@featbit/js-client-sdk/./src/store/index.ts","webpack://@featbit/js-client-sdk/./src/store/serialization.ts","webpack://@featbit/js-client-sdk/./src/store/store.ts","webpack://@featbit/js-client-sdk/./src/utils/Emits.ts","webpack://@featbit/js-client-sdk/./src/utils/EventEmitter.ts","webpack://@featbit/js-client-sdk/./src/utils/Regex.ts","webpack://@featbit/js-client-sdk/./src/utils/ValueConverters.ts","webpack://@featbit/js-client-sdk/./src/utils/canonicalizeUri.ts","webpack://@featbit/js-client-sdk/./src/utils/http.ts","webpack://@featbit/js-client-sdk/./src/utils/index.ts","webpack://@featbit/js-client-sdk/./src/utils/isNullOrUndefined.ts","webpack://@featbit/js-client-sdk/./src/utils/serializeUser.ts","webpack://@featbit/js-client-sdk/./src/utils/sleep.ts","webpack://@featbit/js-client-sdk/./src/version.ts","webpack://@featbit/js-client-sdk/webpack/bootstrap","webpack://@featbit/js-client-sdk/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","import { IOptions } from \"./options/IOptions\";\r\nimport { ILogger } from \"./logging/ILogger\";\r\nimport { IValidatedOptions } from \"./options/IValidatedOptions\";\r\nimport { NumberWithMinimum, TypeValidator, TypeValidators, UserValidator } from \"./options/Validators\";\r\nimport OptionMessages from \"./options/OptionMessages\";\r\nimport { IStore } from \"./platform/IStore\";\r\nimport { IClientContext } from \"./options/IClientContext\";\r\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\r\nimport { IDataSourceUpdates } from \"./store/IDataSourceUpdates\";\r\nimport InMemoryStore from \"./store/InMemoryStore\";\r\nimport { VoidFunction } from \"./utils/VoidFunction\";\r\nimport { isNullOrUndefined } from \"./utils/isNullOrUndefined\";\r\nimport { canonicalizeUri } from \"./utils/canonicalizeUri\";\r\nimport { IBootstrapProvider } from \"./bootstrap/IBootstrapProvider\";\r\nimport { NullBootstrapProvider } from \"./bootstrap/NullBootstrapProvider\";\r\nimport { EmptyString } from \"./constants\";\r\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\r\nimport { IUser } from \"./options/IUser\";\r\nimport LocalStorageStore from \"./platform/browser/LocalStorageStore\";\r\n\r\n// Once things are internal to the implementation of the SDK we can depend on\r\n// types. Calls to the SDK could contain anything without any regard to typing.\r\n// So, data we take from external sources must be normalized into something\r\n// that can be trusted.\r\n\r\n/**\r\n * These perform cursory validations. Complex objects are implemented with classes\r\n * and these should allow for conditional construction.\r\n */\r\nconst validations: Record<string, TypeValidator> = {\r\n  startWaitTime: TypeValidators.Number,\r\n  sdkKey: TypeValidators.String,\r\n  pollingUri: TypeValidators.String,\r\n  streamingUri: TypeValidators.String,\r\n  eventsUri: TypeValidators.String,\r\n  webSocketPingInterval: TypeValidators.Number,\r\n  logger: TypeValidators.Object,\r\n  store: TypeValidators.ObjectOrFactory,\r\n  dataSynchronizer: TypeValidators.ObjectOrFactory,\r\n  flushInterval: TypeValidators.Number,\r\n  maxEventsInQueue: TypeValidators.Number,\r\n  pollingInterval: TypeValidators.Number,\r\n  offline: TypeValidators.Boolean,\r\n  dataSyncMode: TypeValidators.String,\r\n  bootstrapProvider: TypeValidators.Object,\r\n  user: TypeValidators.User\r\n};\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const defaultValues: IValidatedOptions = {\r\n  startWaitTime: 5000,\r\n  sdkKey: '',\r\n  pollingUri: '',\r\n  streamingUri: '',\r\n  eventsUri: '',\r\n  dataSyncMode: DataSyncModeEnum.STREAMING,\r\n  sendEvents: true,\r\n  webSocketPingInterval: 18 * 1000,\r\n  flushInterval: 2000,\r\n  maxEventsInQueue: 10000,\r\n  pollingInterval: 30000,\r\n  offline: false,\r\n  store: (options: IOptions) => new LocalStorageStore(options),\r\n  bootstrapProvider: new NullBootstrapProvider(),\r\n  user: undefined,\r\n};\r\n\r\nfunction validateTypesAndNames(options: IOptions): {\r\n  errors: string[];\r\n  validatedOptions: IValidatedOptions;\r\n} {\r\n  let errors: string[] = [];\r\n  const validatedOptions: IValidatedOptions = {...defaultValues};\r\n  Object.keys(options).forEach((optionName) => {\r\n    // We need to tell typescript it doesn't actually know what options are.\r\n    // If we don't then it complains we are doing crazy things with it.\r\n    const optionValue = (options as unknown as any)[optionName];\r\n    const validator = validations[optionName];\r\n    if (validator) {\r\n      if (!validator.is(optionValue)) {\r\n        if (validator.getType() === 'boolean') {\r\n          errors.push(OptionMessages.wrongOptionTypeBoolean(optionName, typeof optionValue));\r\n          validatedOptions[optionName] = !!optionValue;\r\n        } else if (\r\n          validator instanceof NumberWithMinimum &&\r\n          TypeValidators.Number.is(optionValue)\r\n        ) {\r\n          const {min} = validator as NumberWithMinimum;\r\n          errors.push(OptionMessages.optionBelowMinimum(optionName, optionValue, min));\r\n          validatedOptions[optionName] = min;\r\n        } else if (validator instanceof UserValidator) {\r\n          errors = [...errors, ...validator.messages];\r\n          validatedOptions[optionName] = defaultValues[optionName];\r\n        } else {\r\n          errors.push(\r\n            OptionMessages.wrongOptionType(optionName, validator.getType(), typeof optionValue),\r\n          );\r\n          validatedOptions[optionName] = defaultValues[optionName];\r\n        }\r\n      } else {\r\n        validatedOptions[optionName] = optionValue;\r\n      }\r\n    } else {\r\n      options.logger?.warn(OptionMessages.unknownOption(optionName));\r\n    }\r\n  });\r\n  return {errors, validatedOptions};\r\n}\r\n\r\nfunction validateEndpoints(options: IOptions, validatedOptions: IValidatedOptions) {\r\n  const {streamingUri, pollingUri, eventsUri} = options;\r\n  const streamingUriMissing = isNullOrUndefined(streamingUri) || streamingUri === EmptyString;\r\n  const pollingUriMissing = isNullOrUndefined(pollingUri) || pollingUri === EmptyString;\r\n  const eventsUriMissing = isNullOrUndefined(eventsUri) || eventsUri === EmptyString;\r\n\r\n  if (!validatedOptions.offline && (eventsUriMissing || (streamingUriMissing && pollingUriMissing))) {\r\n    if (eventsUriMissing) {\r\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('eventsUri'));\r\n    }\r\n\r\n    if (validatedOptions.dataSyncMode === DataSyncModeEnum.STREAMING && streamingUriMissing) {\r\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('streamingUri'));\r\n    }\r\n\r\n    if (validatedOptions.dataSyncMode === DataSyncModeEnum.POLLING && pollingUriMissing) {\r\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('pollingUri'));\r\n    }\r\n  }\r\n}\r\n\r\nexport default class Configuration {\r\n  public readonly startWaitTime: number;\r\n\r\n  public readonly sdkKey: string;\r\n\r\n  public readonly streamingUri: string;\r\n\r\n  public readonly pollingUri: string;\r\n\r\n  public readonly eventsUri: string;\r\n\r\n  public readonly webSocketPingInterval: number;\r\n\r\n  public readonly logger?: ILogger;\r\n\r\n  public readonly flushInterval: number;\r\n\r\n  public readonly maxEventsInQueue: number;\r\n\r\n  public readonly pollingInterval: number;\r\n\r\n  public readonly offline: boolean;\r\n\r\n  public readonly dataSyncMode: DataSyncModeEnum;\r\n\r\n  public readonly bootstrapProvider: IBootstrapProvider;\r\n\r\n  public readonly user: IUser;\r\n\r\n  public readonly storeFactory: (clientContext: IClientContext) => IStore;\r\n\r\n  public readonly dataSynchronizerFactory?: (\r\n    clientContext: IClientContext,\r\n    store: IStore,\r\n    dataSourceUpdates: IDataSourceUpdates,\r\n    initSuccessHandler: VoidFunction,\r\n    errorHandler?: (e: Error) => void,\r\n  ) => IDataSynchronizer;\r\n\r\n  constructor(options: IOptions = {}) {\r\n    // The default will handle undefined, but not null.\r\n    // Because we can be called from JS we need to be extra defensive.\r\n    options = options || {};\r\n    // If there isn't a valid logger from the platform, then logs would go nowhere.\r\n    this.logger = options.logger;\r\n\r\n    const {errors, validatedOptions} = validateTypesAndNames(options);\r\n    errors.forEach((error) => {\r\n      this.logger?.warn(error);\r\n    });\r\n\r\n    this.user = options.user!;\r\n\r\n    validateEndpoints(options, validatedOptions);\r\n    this.streamingUri = `${ canonicalizeUri(validatedOptions.streamingUri) }/streaming`;\r\n    this.pollingUri = `${ canonicalizeUri(validatedOptions.pollingUri) }/api/public/sdk/client/latest-all`;\r\n    this.eventsUri = `${ canonicalizeUri(validatedOptions.eventsUri) }/api/public/insight/track`;\r\n\r\n    this.startWaitTime = validatedOptions.startWaitTime;\r\n\r\n    this.sdkKey = validatedOptions.sdkKey;\r\n    this.webSocketPingInterval = validatedOptions.webSocketPingInterval!;\r\n\r\n    this.flushInterval = validatedOptions.flushInterval;\r\n    this.maxEventsInQueue = validatedOptions.maxEventsInQueue;\r\n    this.pollingInterval = validatedOptions.pollingInterval;\r\n\r\n    this.offline = validatedOptions.offline;\r\n    this.bootstrapProvider = validatedOptions.bootstrapProvider;\r\n    if (this.offline) {\r\n      this.logger?.info('Offline mode enabled. No data synchronization with the FeatBit server will occur.');\r\n    }\r\n\r\n    this.dataSyncMode = validatedOptions.dataSyncMode;\r\n\r\n    if (TypeValidators.Function.is(validatedOptions.dataSynchronizer)) {\r\n      // @ts-ignore\r\n      this.dataSynchronizerFactory = validatedOptions.dataSynchronizer;\r\n    } else {\r\n      // The processor is already created, just have the method return it.\r\n      // @ts-ignore\r\n      this.dataSynchronizerFactory = () => validatedOptions.dataSynchronizer;\r\n    }\r\n\r\n    if (TypeValidators.Function.is(validatedOptions.store)) {\r\n      // @ts-ignore\r\n      this.storeFactory = validatedOptions.store;\r\n    } else {\r\n      // The store is already created, just have the method return it.\r\n      // @ts-ignore\r\n      this.storeFactory = () => validatedOptions.store;\r\n    }\r\n  }\r\n}","import { IUser } from \"./options/IUser\";\r\n\r\nexport default class Context {\r\n  private _user?: IUser;\r\n  /**\r\n   * Is this a valid context. If a valid context cannot be created, then this flag will be true.\r\n   * The validity of a context should be tested before it is used.\r\n   */\r\n  public readonly valid: boolean;\r\n\r\n  public readonly message?: string;\r\n\r\n  /**\r\n   * Contexts should be created using the static factory method {@link Context.fromUser}.\r\n   *\r\n   * The factory methods are static functions within the class because they access private\r\n   * implementation details, so they cannot be free functions.\r\n   */\r\n  private constructor(valid: boolean, message?: string) {\r\n    this.valid = valid;\r\n    this.message = message;\r\n  }\r\n\r\n  public static fromUser(user: IUser): Context {\r\n    if (!user) {\r\n      return Context.contextForError('No user specified');\r\n    }\r\n\r\n    const {keyId, name} = user;\r\n\r\n    if (keyId === undefined || keyId === null || keyId.trim() === '') {\r\n      return Context.contextForError('key is mandatory');\r\n    }\r\n\r\n    const context = new Context(true);\r\n    context._user = user;\r\n\r\n    return context;\r\n  }\r\n\r\n  get user(): IUser {\r\n    return this._user!;\r\n  }\r\n\r\n  get keyId(): string {\r\n    return this._user!.keyId;\r\n  }\r\n\r\n  value(property: string): any {\r\n    if (property === 'keyId') {\r\n      return this._user?.keyId;\r\n    } else if (property === 'name') {\r\n      return this._user?.name;\r\n    } else {\r\n      return this._user?.customizedProperties?.find(x => x.name === property)?.value;\r\n    }\r\n  }\r\n\r\n  private static contextForError(message: string) {\r\n    return new Context(false, message);\r\n  }\r\n}","import { IFbClient } from \"./IFbClient\";\r\nimport { IOptions } from \"./options/IOptions\";\r\nimport FbClient from \"./platform/browser/FbClient\";\r\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\r\nimport { IClientContext } from \"./options/IClientContext\";\r\nimport { IDataSourceUpdates } from \"./store/IDataSourceUpdates\";\r\nimport { VoidFunction } from \"./utils/VoidFunction\";\r\nimport { ILogger } from \"./logging/ILogger\";\r\nimport { IBootstrapProvider } from \"./bootstrap/IBootstrapProvider\";\r\nimport { JsonBootstrapProvider } from \"./bootstrap/JsonBootstrapProvider\";\r\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\r\nimport { IUser } from \"./options/IUser\";\r\n\r\n/**\r\n * Creates an instance of the FeatBit client.\r\n *\r\n * Applications should instantiate a single instance for the lifetime of the application.\r\n * The client will begin attempting to connect to FeatBit as soon as it is created. To\r\n * determine when it is ready to use, call {@link IFbClient.waitForInitialization}, or register an\r\n * event listener for the `\"ready\"` event using {@link IFbClient.on}.\r\n *\r\n * **Important:** Do **not** try to instantiate `FbClient` with its constructor\r\n * (`new FbClientNode()`); the SDK does not currently support\r\n * this.\r\n *\r\n * @return\r\n *   The new {@link IFbClient} instance.\r\n */\r\nexport class FbClientBuilder {\r\n  private _options: IOptions;\r\n\r\n  constructor(options?: IOptions) {\r\n    this._options = options ?? {};\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the FeatBit client.\r\n   */\r\n  build(): IFbClient {\r\n    return new FbClient(this._options);\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.startWaitTime}.\r\n   */\r\n  startWaitTime(startWaitTime: number): FbClientBuilder {\r\n    this._options.startWaitTime = startWaitTime;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.sdkKey}.\r\n   */\r\n  sdkKey(sdkKey: string): FbClientBuilder {\r\n    this._options.sdkKey = sdkKey;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.user}.\r\n   */\r\n  user(user: IUser): FbClientBuilder {\r\n    this._options.user = user;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.streamingUri}.\r\n   */\r\n  streamingUri(streamingUri: string): FbClientBuilder {\r\n    this._options.streamingUri = streamingUri;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.pollingUri}.\r\n   */\r\n  pollingUri(pollingUri: string): FbClientBuilder {\r\n    this._options.pollingUri = pollingUri;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.eventsUri}.\r\n   */\r\n  eventsUri(eventsUri: string): FbClientBuilder {\r\n    this._options.eventsUri = eventsUri;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.dataSyncMode}.\r\n   */\r\n  dataSyncMode(mode: DataSyncModeEnum): FbClientBuilder {\r\n    this._options.dataSyncMode = mode;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.pollingInterval}.\r\n   */\r\n  pollingInterval(pollingInterval: number): FbClientBuilder {\r\n    this._options.pollingInterval = pollingInterval;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.flushInterval}.\r\n   */\r\n  flushInterval(flushInterval: number): FbClientBuilder {\r\n    this._options.flushInterval = flushInterval;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.maxEventsInQueue}.\r\n   */\r\n  maxEventsInQueue(maxEventsInQueue: number): FbClientBuilder {\r\n    this._options.maxEventsInQueue = maxEventsInQueue;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.logger}.\r\n   */\r\n  logger(logger: ILogger): FbClientBuilder {\r\n    this._options.logger = logger;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.offline}.\r\n   */\r\n  offline(offline: boolean): FbClientBuilder {\r\n    this._options.offline = offline;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.bootstrapProvider}.\r\n   */\r\n  bootstrapProvider(bootstrapProvider: IBootstrapProvider): FbClientBuilder {\r\n    this._options.bootstrapProvider = bootstrapProvider;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Use the JsonBootstrapProvider.\r\n   */\r\n  useJsonBootstrapProvider(jsonStr: string): FbClientBuilder {\r\n    this._options.bootstrapProvider = new JsonBootstrapProvider(jsonStr);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.dataSynchronizer}.\r\n   */\r\n  dataSynchronizer(\r\n    dataSynchronizer: IDataSynchronizer |\r\n    ((\r\n      clientContext: IClientContext,\r\n      dataSourceUpdates: IDataSourceUpdates,\r\n      initSuccessHandler: VoidFunction,\r\n      errorHandler?: (e: Error) => void,\r\n    ) => IDataSynchronizer)\r\n  ): FbClientBuilder {\r\n    this._options.dataSynchronizer = dataSynchronizer;\r\n    return this;\r\n  }\r\n}","import { IFbClientCore } from \"./IFbClientCore\";\r\nimport { IPlatform } from \"./platform/IPlatform\";\r\nimport Configuration from \"./Configuration\";\r\nimport { ILogger } from \"./logging/ILogger\";\r\nimport ClientContext from \"./options/ClientContext\";\r\nimport DataSourceUpdates from \"./data-sources/DataSourceUpdates\";\r\nimport { createStreamListeners } from \"./data-sources/createStreamListeners\";\r\nimport { IEvalDetail } from \"./evaluation/IEvalDetail\";\r\nimport WebSocketDataSynchronizer from \"./data-sync/WebSocketDataSynchronizer\";\r\nimport PollingDataSynchronizer from \"./data-sync/PollingDataSynchronizer\";\r\nimport Requestor from \"./data-sync/Requestor\";\r\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\r\nimport DataKinds from \"./store/DataKinds\";\r\nimport Evaluator from \"./evaluation/Evaluator\";\r\nimport { ReasonKinds } from \"./evaluation/ReasonKinds\";\r\nimport { ClientError } from \"./errors\";\r\nimport Context from \"./Context\";\r\nimport { IConvertResult, ValueConverters } from \"./utils/ValueConverters\";\r\nimport { NullDataSynchronizer } from \"./data-sync/NullDataSynchronizer\";\r\nimport { IEventProcessor } from \"./events/IEventProcessor\";\r\nimport { NullEventProcessor } from \"./events/NullEventProcessor\";\r\nimport { DefaultEventProcessor } from \"./events/DefaultEventProcessor\";\r\nimport { IStore } from \"./platform/IStore\";\r\nimport { IOptions } from \"./options/IOptions\";\r\nimport { MetricEvent } from \"./events/event\";\r\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\r\nimport { IUser } from \"./options/IUser\";\r\nimport { UserValidator } from \"./options/Validators\";\r\n\r\nenum ClientState {\r\n  Initializing,\r\n  Initialized,\r\n  Failed,\r\n}\r\n\r\nexport interface IClientCallbacks {\r\n  onError: (err: Error) => void;\r\n  onFailed: (err: Error) => void;\r\n  onReady: () => void;\r\n  // Called whenever flags change, if there are listeners.\r\n  onUpdate: (key: string) => void;\r\n  // Method to check if event listeners have been registered.\r\n  // If none are registered, then onUpdate will never be called.\r\n  hasEventListeners: () => boolean;\r\n}\r\n\r\nexport class FbClientCore implements IFbClientCore {\r\n  private state: ClientState = ClientState.Initializing;\r\n\r\n  private store?: IStore;\r\n\r\n  private dataSynchronizer?: IDataSynchronizer;\r\n\r\n  private eventProcessor?: IEventProcessor;\r\n\r\n  private evaluator?: Evaluator;\r\n\r\n  private initResolve?: (value: IFbClientCore | PromiseLike<IFbClientCore>) => void;\r\n\r\n  private initReject?: (err: Error) => void;\r\n\r\n  private rejectionReason: Error | undefined;\r\n\r\n  private initializedPromise?: Promise<IFbClientCore>;\r\n\r\n  private logger?: ILogger;\r\n\r\n  private config: Configuration;\r\n\r\n  private onError: (err: Error) => void;\r\n\r\n  private onFailed: (err: Error) => void;\r\n\r\n  private onReady: () => void;\r\n\r\n  constructor(\r\n    private options: IOptions,\r\n    private platform: IPlatform,\r\n    callbacks: IClientCallbacks\r\n  ) {\r\n    this.onError = callbacks.onError;\r\n    this.onFailed = callbacks.onFailed;\r\n    this.onReady = callbacks.onReady;\r\n\r\n    const {onUpdate, hasEventListeners} = callbacks;\r\n    const config = new Configuration(options);\r\n\r\n    if (!config.sdkKey && !config.offline) {\r\n      throw new Error('You must configure the client with an SDK key');\r\n    }\r\n\r\n    if (!config.user) {\r\n      throw new Error('You must configure the client with a user');\r\n    }\r\n\r\n    this.config = config;\r\n    this.logger = config.logger;\r\n\r\n    this.init(platform, onUpdate, hasEventListeners);\r\n  }\r\n\r\n  private async init(platform: IPlatform, onUpdate: (key: string) => void, hasEventListeners: () => boolean) {\r\n    const clientContext = new ClientContext(this.config.sdkKey, this.config, platform);\r\n    this.store = this.config.storeFactory(clientContext);\r\n    this.store.identify(this.config.user);\r\n    const dataSourceUpdates = new DataSourceUpdates(this.store, hasEventListeners, onUpdate);\r\n    this.evaluator = new Evaluator(this.store);\r\n\r\n    // use bootstrap provider to populate store\r\n    await this.config.bootstrapProvider.populate(this.config.user.keyId, dataSourceUpdates);\r\n\r\n    if (this.config.offline) {\r\n      this.eventProcessor = new NullEventProcessor();\r\n      this.dataSynchronizer = new NullDataSynchronizer();\r\n\r\n      this.initSuccess();\r\n    } else {\r\n      this.eventProcessor = new DefaultEventProcessor(clientContext);\r\n\r\n      const listeners = createStreamListeners(dataSourceUpdates, this.logger, {\r\n        put: () => this.initSuccess(),\r\n        patch: () => this.initSuccess()\r\n      });\r\n\r\n      const dataSynchronizer = this.config.dataSyncMode === DataSyncModeEnum.STREAMING\r\n        ? new WebSocketDataSynchronizer(\r\n          this.config.sdkKey,\r\n          this.config.user,\r\n          clientContext,\r\n          platform.webSocket,\r\n          () => this.store!.version,\r\n          listeners,\r\n          this.config.webSocketPingInterval\r\n        )\r\n        : new PollingDataSynchronizer(\r\n          this.config,\r\n          new Requestor(this.config.sdkKey, this.config, this.platform.info, this.platform.requests),\r\n          () => this.store!.version,\r\n          listeners,\r\n          (e) => this.dataSourceErrorHandler(e),\r\n        );\r\n\r\n      this.dataSynchronizer = this.config.dataSynchronizerFactory?.(\r\n        clientContext,\r\n        this.store,\r\n        dataSourceUpdates,\r\n        () => this.initSuccess(),\r\n        (e) => this.dataSourceErrorHandler(e),\r\n      ) ?? dataSynchronizer;\r\n    }\r\n\r\n    this.start();\r\n  }\r\n\r\n  identify(user: IUser) {\r\n    const validator = new UserValidator();\r\n    if (!validator.is(user)) {\r\n      validator.messages.forEach((error: string) => {\r\n        this.logger?.warn(error);\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.store!.identify(user);\r\n    this.dataSynchronizer!.identify(user);\r\n  }\r\n\r\n  private start() {\r\n    if (this.config.offline) {\r\n      return;\r\n    }\r\n\r\n    this.dataSynchronizer!.start();\r\n    setTimeout(() => {\r\n      if (!this.initialized()) {\r\n        const msg = `FbClient failed to start successfully within ${ this.config.startWaitTime } milliseconds. ` +\r\n          'This error usually indicates a connection issue with FeatBit or an invalid sdkKey.' +\r\n          'Please double-check your sdkKey and streamingUri/pollingUri configuration. ' +\r\n          'We will continue to initialize the FbClient, it still have a chance to get to work ' +\r\n          'if it\\'s a temporary network issue';\r\n\r\n        const error = new Error(msg);\r\n        this.state = ClientState.Failed;\r\n        this.rejectionReason = error;\r\n        this.initReject?.(error);\r\n\r\n        return this.logger?.warn(msg);\r\n      }\r\n    }, this.config.startWaitTime);\r\n  }\r\n\r\n  initialized(): boolean {\r\n    return this.state === ClientState.Initialized;\r\n  }\r\n\r\n  waitForInitialization(): Promise<IFbClientCore> {\r\n    // An initialization promise is only created if someone is going to use that promise.\r\n    // If we always created an initialization promise, and there was no call waitForInitialization\r\n    // by the time the promise was rejected, then that would result in an unhandled promise\r\n    // rejection.\r\n\r\n    // Initialization promise was created by a previous call to waitForInitialization.\r\n    if (this.initializedPromise) {\r\n      return this.initializedPromise;\r\n    }\r\n\r\n    // Initialization completed before waitForInitialization was called, so we have completed\r\n    // and there was no promise. So we make a resolved promise and return it.\r\n    if (this.state === ClientState.Initialized) {\r\n      this.initializedPromise = Promise.resolve(this);\r\n      return this.initializedPromise;\r\n    }\r\n\r\n    // Initialization failed before waitForInitialization was called, so we have completed\r\n    // and there was no promise. So we make a rejected promise and return it.\r\n    if (this.state === ClientState.Failed) {\r\n      this.initializedPromise = Promise.reject(this.rejectionReason);\r\n      return this.initializedPromise;\r\n    }\r\n\r\n    if (!this.initializedPromise) {\r\n      this.initializedPromise = new Promise((resolve, reject) => {\r\n        this.initResolve = resolve;\r\n        this.initReject = reject;\r\n      });\r\n    }\r\n    return this.initializedPromise;\r\n  }\r\n\r\n  boolVariation(\r\n    key: string,\r\n    defaultValue: boolean\r\n  ): Promise<boolean> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.bool).value!);\r\n  }\r\n\r\n  boolVariationDetail(\r\n    key: string,\r\n    defaultValue: boolean\r\n  ): Promise<IEvalDetail<boolean>> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.bool));\r\n  }\r\n\r\n  jsonVariation(key: string, defaultValue: any): Promise<any> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.json).value!);\r\n  }\r\n\r\n  jsonVariationDetail(key: string, defaultValue: any): Promise<IEvalDetail<any>> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.json));\r\n  }\r\n\r\n  numberVariation(key: string, defaultValue: number): Promise<number> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.number).value!);\r\n  }\r\n\r\n  numberVariationDetail(key: string, defaultValue: number): Promise<IEvalDetail<number>> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.number));\r\n  }\r\n\r\n  stringVariation(key: string, defaultValue: string): Promise<string> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.string).value!);\r\n  }\r\n\r\n  stringVariationDetail(key: string, defaultValue: string): Promise<IEvalDetail<string>> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.string));\r\n  }\r\n\r\n  variation(key: string, defaultValue: string): Promise<string> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.string).value!);\r\n  }\r\n\r\n  variationDetail(key: string, defaultValue: string): Promise<IEvalDetail<string>> {\r\n    return Promise.resolve(this.evaluateCore(key, defaultValue, ValueConverters.string));\r\n  }\r\n\r\n  getAllVariations(): Promise<IEvalDetail<string>[]> {\r\n    const context = Context.fromUser(this.config.user);\r\n    if (!context.valid) {\r\n      const error = new ClientError(\r\n        `${ context.message ?? 'User not valid;' } returning default value.`,\r\n      );\r\n      this.onError(error);\r\n\r\n      return Promise.resolve([]);\r\n    }\r\n\r\n    const [flags, _] = this.store!.all(DataKinds.Flags);\r\n    const result = Object.keys(flags).map(flagKey => {\r\n      const evalResult = this.evaluator!.evaluate(flagKey);\r\n      return {kind: evalResult.kind, reason: evalResult.reason, value: evalResult.value?.variation};\r\n    });\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  async close(): Promise<void> {\r\n    await this.eventProcessor!.close();\r\n    this.dataSynchronizer?.close();\r\n    this.store!.close();\r\n  }\r\n\r\n  track(eventName: string, metricValue?: number | undefined): void {\r\n    const metricEvent = new MetricEvent(this.config.user, eventName, this.platform.info.appType, metricValue ?? 1);\r\n    this.eventProcessor!.record(metricEvent);\r\n    return;\r\n  }\r\n\r\n  async flush(callback?: (res: boolean) => void): Promise<boolean> {\r\n    try {\r\n      await this.eventProcessor!.flush();\r\n      callback?.(true);\r\n      return true;\r\n    } catch (err) {\r\n      callback?.(false);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  evaluateCore<TValue>(\r\n    flagKey: string,\r\n    defaultValue: TValue,\r\n    typeConverter: (value: string) => IConvertResult<TValue>\r\n  ): IEvalDetail<TValue> {\r\n    const context = Context.fromUser(this.config.user);\r\n    if (!context.valid) {\r\n      const error = new ClientError(\r\n        `${ context.message ?? 'User not valid;' } returning default value.`,\r\n      );\r\n      this.onError(error);\r\n\r\n      return {kind: ReasonKinds.Error, reason: error.message, value: defaultValue};\r\n    }\r\n\r\n    const evalResult = this.evaluator!.evaluate(flagKey);\r\n\r\n    if (evalResult.kind === ReasonKinds.FlagNotFound) {\r\n      // flag not found, return default value\r\n      const error = new ClientError(evalResult.reason!);\r\n      this.onError(error);\r\n\r\n      return {kind: evalResult.kind, reason: evalResult.reason, value: defaultValue};\r\n    }\r\n\r\n    if (!this.initialized()) {\r\n      this.logger?.warn(\r\n        'Variation called before FeatBit client initialization completed (did you wait for the' +\r\n        \"'ready' event?)\",\r\n      );\r\n    } else {\r\n      // send event\r\n      this.eventProcessor!.record(evalResult.toEvalEvent(this.config.user));\r\n    }\r\n\r\n    const {isSucceeded, value} = typeConverter(evalResult.value?.variation!);\r\n    return isSucceeded\r\n      ? {kind: evalResult.kind, reason: evalResult.reason, value}\r\n      : {kind: ReasonKinds.WrongType, reason: 'type mismatch', value: defaultValue};\r\n  }\r\n\r\n  private dataSourceErrorHandler(e: any) {\r\n    const error =\r\n      e.code === 401 ? new Error('Authentication failed. Double check your SDK key.') : e;\r\n\r\n    this.onError(error);\r\n    this.onFailed(error);\r\n\r\n    if (!this.initialized()) {\r\n      this.state = ClientState.Failed;\r\n      this.rejectionReason = error;\r\n      this.initReject?.(error);\r\n    }\r\n  }\r\n\r\n  private initSuccess() {\r\n    if (!this.initialized()) {\r\n      this.state = ClientState.Initialized;\r\n      this.logger?.info('FbClient started successfully.');\r\n      this.initResolve?.(this);\r\n      this.onReady();\r\n    }\r\n  }\r\n}\r\n","import { IBootstrapProvider } from \"./IBootstrapProvider\";\r\nimport { deserializeAll } from \"../store/serialization\";\r\nimport { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\r\nimport { IStoreDataStorage } from \"../store/store\";\r\nimport { isNullOrUndefined } from \"../utils/isNullOrUndefined\";\r\nimport { IFlag } from \"../evaluation/data/IFlag\";\r\n\r\nexport class JsonBootstrapProvider implements IBootstrapProvider {\r\n  private dataSet?: IStoreDataStorage;\r\n\r\n  constructor(jsonStr: string) {\r\n    let flags = JSON.parse(jsonStr);\r\n    if (!flags) {\r\n      throw new Error(\"Invalid JSON\");\r\n    }\r\n\r\n    flags = flags.map((flag: IFlag) => ({...flag, variationOptions: flag.variationOptions || [{id: null, variation: flag.variation}]}));\r\n\r\n    const data = deserializeAll(flags);\r\n    this.dataSet = {\r\n      flags: data.flags,\r\n      version: 0\r\n    };\r\n  }\r\n\r\n  populate(userKeyId: string, dataSourceUpdates: IDataSourceUpdates, callback?: () => void): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      if (isNullOrUndefined(this.dataSet)) {\r\n        return resolve();\r\n      }\r\n\r\n      const internalCallback = () => {\r\n        resolve();\r\n        callback?.();\r\n      }\r\n\r\n      dataSourceUpdates.init(userKeyId, this.dataSet!, internalCallback);\r\n    });\r\n  }\r\n}","import { IBootstrapProvider } from \"./IBootstrapProvider\";\r\nimport { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\r\nimport { IStoreDataStorage } from \"../store/store\";\r\n\r\nexport class NullBootstrapProvider implements IBootstrapProvider {\r\n  private dataSet?: IStoreDataStorage;\r\n\r\n  constructor() {\r\n    this.dataSet = {\r\n      flags: {},\r\n      version: 0\r\n    };\r\n  }\r\n\r\n  populate(userKeyId: string, dataSourceUpdates: IDataSourceUpdates, callback?: () => void): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      resolve();\r\n      callback?.();\r\n    });\r\n  }\r\n}","export * from './IBootstrapProvider';\r\nexport * from './JsonBootstrapProvider';\r\nexport * from './NullBootstrapProvider';","export const EmptyString = '';\r\nexport const MinInt: number = 0x80000000;","import { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\r\nimport {\r\n  IStoreDataStorage,\r\n  IStoreItem,\r\n  IKeyedStoreItem\r\n} from \"../store/store\";\r\nimport { IStore } from \"../platform/IStore\";\r\nimport { IDataKind } from \"../IDataKind\";\r\nimport NamespacedDataSet from \"./NamespacedDataSet\";\r\nimport DataKinds from \"../store/DataKinds\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport default class DataSourceUpdates implements IDataSourceUpdates {\r\n\r\n  constructor(\r\n    private readonly store: IStore,\r\n    private readonly hasEventListeners: () => boolean,\r\n    private readonly onChange: (key: string) => void,\r\n  ) {\r\n  }\r\n\r\n  init(userKeyId: string, allData: IStoreDataStorage, callback?: () => void): void {\r\n    if (userKeyId !== this.store.user.keyId) {\r\n      callback?.();\r\n      return;\r\n    }\r\n\r\n    const checkForChanges = this.hasEventListeners();\r\n    const doInit = (oldData?: IStoreDataStorage) => {\r\n      this.store.init(allData, () => {\r\n        // Defer change events so they execute after the callback.\r\n        Promise.resolve().then(() => {\r\n          if (checkForChanges) {\r\n            const updatedFlags = new NamespacedDataSet<boolean>();\r\n            Object.keys(allData).forEach((namespace) => {\r\n              const oldDataForKind = oldData?.[namespace] || {};\r\n              const newDataForKind = allData[namespace];\r\n              const mergedData = {...oldDataForKind, ...newDataForKind};\r\n              Object.keys(mergedData)\r\n                .filter((key: string) => this.isUpdated(oldDataForKind && oldDataForKind[key], newDataForKind && newDataForKind[key]))\r\n                .reduce((acc, key) => {\r\n                  acc.set(namespace, key, true);\r\n                  return acc;\r\n                }, updatedFlags);\r\n            });\r\n            this.sendChangeEvents(updatedFlags);\r\n          }\r\n        });\r\n        callback?.();\r\n      });\r\n    };\r\n\r\n    if (checkForChanges) {\r\n      const [flags, version] = this.store.all(DataKinds.Flags);\r\n      const oldData = {\r\n        flags,\r\n        version\r\n      };\r\n      doInit(oldData);\r\n    } else {\r\n      doInit();\r\n    }\r\n  }\r\n\r\n  upsert(userKeyId: string, kind: IDataKind, data: IKeyedStoreItem, callback: () => void): void {\r\n    if (userKeyId !== this.store.user.keyId) {\r\n      callback?.();\r\n      return;\r\n    }\r\n\r\n    const {key} = data;\r\n    const checkForChanges = this.hasEventListeners();\r\n    const doUpsert = (oldItem?: IStoreItem) => {\r\n      this.store.upsert(kind, data, () => {\r\n        // Defer change events so they execute after the callback.\r\n        Promise.resolve().then(() => {\r\n          if (checkForChanges) {\r\n            const updatedFlags = new NamespacedDataSet<boolean>();\r\n            if (this.isUpdated(oldItem, data[key])) {\r\n              updatedFlags.set(kind.namespace, key, true);\r\n            }\r\n            this.sendChangeEvents(updatedFlags);\r\n          }\r\n        });\r\n\r\n        callback?.();\r\n      });\r\n    };\r\n    if (checkForChanges) {\r\n      const item = this.store.get(kind, key);\r\n      doUpsert(item || undefined);\r\n    } else {\r\n      doUpsert();\r\n    }\r\n  }\r\n\r\n  private isUpdated(oldData?: IStoreItem, newData?: IStoreItem): boolean {\r\n    return !oldData || !newData || newData.version > oldData.version\r\n  }\r\n\r\n  private sendChangeEvents(dataSet: NamespacedDataSet<boolean>) {\r\n    dataSet.enumerate((namespace, key) => {\r\n      if (namespace === DataKinds.Flags.namespace) {\r\n        this.onChange(key);\r\n      }\r\n    });\r\n  }\r\n}","/**\r\n * @internal\r\n */\r\nexport default class NamespacedDataSet<T> {\r\n  private itemsByNamespace: Record<string, Record<string, T>> = {};\r\n\r\n  get(namespace: string, key: string): T | undefined {\r\n    return this.itemsByNamespace[namespace]?.[key];\r\n  }\r\n\r\n  set(namespace: string, key: string, value: T) {\r\n    if (!(namespace in this.itemsByNamespace)) {\r\n      this.itemsByNamespace[namespace] = {};\r\n    }\r\n    this.itemsByNamespace[namespace][key] = value;\r\n  }\r\n\r\n  remove(namespace: string, key: string) {\r\n    const items = this.itemsByNamespace[namespace];\r\n    if (items) {\r\n      delete items[key];\r\n    }\r\n  }\r\n\r\n  removeAll() {\r\n    this.itemsByNamespace = {};\r\n  }\r\n\r\n  enumerate(callback: (namespace: string, key: string, value: T) => void) {\r\n    Object.entries(this.itemsByNamespace).forEach(([namespace, values]) => {\r\n      Object.entries(values).forEach(([key, value]) => {\r\n        callback(namespace, key, value);\r\n      });\r\n    });\r\n  }\r\n\r\n  mergeFrom(other: NamespacedDataSet<T>) {\r\n    other.enumerate(this.set.bind(this));\r\n  }\r\n}\r\n","import { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\nimport { VoidFunction } from \"../utils/VoidFunction\";\r\nimport {\r\n  deserializeAll,\r\n  deserializePatch,\r\n  IPatchData,\r\n  Flags\r\n} from \"../store/serialization\";\r\nimport DataKinds from \"../store/DataKinds\";\r\nimport { IStoreDataStorage } from \"../store/store\";\r\nimport { EventName, ProcessStreamResponse } from \"../data-sync/types\";\r\n\r\nexport const createPutListener = (\r\n  dataSourceUpdates: IDataSourceUpdates,\r\n  logger?: ILogger,\r\n  onPutCompleteHandler: VoidFunction = () => {\r\n  },\r\n) => ({\r\n  deserializeData: deserializeAll,\r\n  processJson: async (userKeyId: string, {flags}: Flags) => {\r\n    const initData: IStoreDataStorage = {\r\n      flags: flags,\r\n      version: 0\r\n    };\r\n\r\n    logger?.debug('Initializing all data');\r\n    dataSourceUpdates.init(userKeyId, initData, onPutCompleteHandler);\r\n  },\r\n});\r\n\r\nexport const createPatchListener = (\r\n  dataSourceUpdates: IDataSourceUpdates,\r\n  logger?: ILogger,\r\n  onPatchCompleteHandler: VoidFunction = () => {\r\n  },\r\n) => ({\r\n  deserializeData: deserializePatch,\r\n  processJson: async (userKeyId: string, data: IPatchData[]) => {\r\n    if (data?.length === 0) {\r\n      onPatchCompleteHandler?.();\r\n      return;\r\n    }\r\n\r\n    data?.forEach(item => {\r\n      logger?.debug(`Updating ${ item.data.key } in ${ item.kind.namespace }`);\r\n      dataSourceUpdates.upsert(userKeyId, item.kind, item.data, onPatchCompleteHandler);\r\n    })\r\n  },\r\n});\r\n\r\n\r\nexport const createStreamListeners = (\r\n  dataSourceUpdates: IDataSourceUpdates,\r\n  logger?: ILogger,\r\n  onCompleteHandlers?: {\r\n    put?: VoidFunction;\r\n    patch?: VoidFunction;\r\n    delete?: VoidFunction;\r\n  },\r\n) => {\r\n  const listeners = new Map<EventName, ProcessStreamResponse>();\r\n  listeners.set('put', createPutListener(dataSourceUpdates, logger, onCompleteHandlers?.put));\r\n  listeners.set('patch', createPatchListener(dataSourceUpdates, logger, onCompleteHandlers?.patch));\r\n  return listeners;\r\n};\r\n","export * from './createStreamListeners';\r\nexport * from './DataSourceUpdates';\r\nexport * from './NamespacedDataSet';","export enum DataSyncModeEnum {\r\n  POLLING = 'polling',\r\n  STREAMING = 'streaming'\r\n}","import { IDataSynchronizer } from \"./IDataSynchronizer\";\r\n\r\nexport class NullDataSynchronizer implements IDataSynchronizer {\r\n  close(): void {\r\n  }\r\n\r\n  start(): void {\r\n  }\r\n\r\n  stop(): void {\r\n  }\r\n\r\n  identify(): void {\r\n  }\r\n}","import { isHttpRecoverable, PollingError } from \"../errors\";\r\nimport { IDataSynchronizer } from \"./IDataSynchronizer\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\nimport Configuration from \"../Configuration\";\r\nimport { EventName, PollingErrorHandler, ProcessStreamResponse, StreamResponseEventType } from \"./types\";\r\nimport Requestor from \"./Requestor\";\r\nimport { httpErrorMessage } from \"../utils/http\";\r\nimport { IUser } from \"../options/IUser\";\r\n\r\nexport default class PollingDataSynchronizer implements IDataSynchronizer {\r\n  private stopped = false;\r\n\r\n  private logger?: ILogger;\r\n\r\n  private pollingInterval: number;\r\n\r\n  private user: IUser | undefined;\r\n\r\n  private timeoutHandle: any;\r\n\r\n  constructor(\r\n    config: Configuration,\r\n    private readonly requestor: Requestor,\r\n    private readonly getStoreTimestamp: () => number,\r\n    private readonly listeners: Map<EventName, ProcessStreamResponse>,\r\n    private readonly errorHandler?: PollingErrorHandler,\r\n  ) {\r\n    this.logger = config.logger;\r\n    this.pollingInterval = config.pollingInterval;\r\n    this.user = config.user;\r\n  }\r\n\r\n  private poll() {\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    const startTime = Date.now();\r\n    this.logger?.debug('Polling for feature flag and segments updates');\r\n    this.requestor.requestData(this.getStoreTimestamp(), this.user, (err, body) => {\r\n      const elapsed = Date.now() - startTime;\r\n      const sleepFor = Math.max(this.pollingInterval - elapsed, 0);\r\n\r\n      this.logger?.debug('Elapsed: %d ms, sleeping for %d ms', elapsed, sleepFor);\r\n      if (err) {\r\n        const {status} = err;\r\n        if (status && !isHttpRecoverable(status)) {\r\n          const message = httpErrorMessage(err, 'polling request');\r\n          this.logger?.error(message);\r\n          this.errorHandler?.(new PollingError(message, status));\r\n          // It is not recoverable, return and do not trigger another\r\n          // poll.\r\n          return;\r\n        }\r\n        this.logger?.warn(httpErrorMessage(err, 'polling request', 'will retry'));\r\n      } else if (body) {\r\n        const message = JSON.parse(body);\r\n        if (message.messageType === 'data-sync') {\r\n          let processStreamResponse: ProcessStreamResponse | undefined;\r\n          switch (message.data.eventType) {\r\n            case StreamResponseEventType.patch:\r\n              processStreamResponse = this.listeners.get('patch');\r\n              break;\r\n            case StreamResponseEventType.full:\r\n              processStreamResponse = this.listeners.get('put');\r\n              break;\r\n          }\r\n\r\n          const {featureFlags, userKeyId} = message.data;\r\n          const data = processStreamResponse?.deserializeData?.(featureFlags);\r\n          processStreamResponse?.processJson?.(userKeyId, data);\r\n\r\n          this.timeoutHandle = setTimeout(() => {\r\n            this.poll();\r\n          }, sleepFor);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Falling through, there was some type of error and we need to trigger\r\n      // a new poll.\r\n      this.timeoutHandle = setTimeout(() => {\r\n        this.poll();\r\n      }, sleepFor);\r\n    });\r\n  }\r\n\r\n  identify(user: IUser) {\r\n    this.user = {...user};\r\n  }\r\n\r\n  close(): void {\r\n    this.stop();\r\n  }\r\n\r\n  start(): void {\r\n    this.poll();\r\n  }\r\n\r\n  stop(): void {\r\n    if (this.timeoutHandle) {\r\n      clearTimeout(this.timeoutHandle);\r\n      this.timeoutHandle = undefined;\r\n    }\r\n    this.stopped = true;\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { IRequestor } from \"./IRequestor\";\r\nimport Configuration from \"../Configuration\";\r\nimport { IInfo } from \"../platform/IInfo\";\r\nimport { IRequestOptions, IRequests, IResponse } from \"../platform/requests\";\r\nimport { StreamingError } from \"../errors\";\r\nimport { defaultHeaders } from \"../utils/http\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport default class Requestor implements IRequestor {\r\n  private readonly headers: Record<string, string>;\r\n\r\n  private readonly uri: string;\r\n\r\n  constructor(\r\n    sdkKey: string,\r\n    config: Configuration,\r\n    info: IInfo,\r\n    private readonly requests: IRequests,\r\n  ) {\r\n    this.headers = defaultHeaders(sdkKey, info);\r\n    this.uri = config.pollingUri;\r\n  }\r\n\r\n  /**\r\n   * Perform a request and utilize the ETag cache. The ETags are cached in the\r\n   * requestor instance.\r\n   */\r\n  private async request(\r\n    requestUrl: string,\r\n    options: IRequestOptions,\r\n  ): Promise<{\r\n    res: IResponse;\r\n    body: string;\r\n  }> {\r\n    const res = await this.requests.fetch(requestUrl, options);\r\n\r\n    const body = await res.text();\r\n\r\n    return {res, body};\r\n  }\r\n\r\n  async requestData(timestamp: number, payload: any, cb: (err: any, body: any) => void) {\r\n    const options: IRequestOptions = {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify(payload)\r\n    };\r\n    try {\r\n      const {res, body} = await this.request(`${ this.uri }?timestamp=${ timestamp ?? 0 }`, options);\r\n      if (res.status !== 200 && res.status !== 304) {\r\n        const err = new StreamingError(`Unexpected status code: ${ res.status }`, res.status);\r\n        return cb(err, undefined);\r\n      }\r\n      return cb(undefined, res.status === 304 ? null : body);\r\n    } catch (err) {\r\n      return cb(err, undefined);\r\n    }\r\n  }\r\n}\r\n","import { IDataSynchronizer } from \"./IDataSynchronizer\";\r\nimport ClientContext from \"../options/ClientContext\";\r\nimport { EventName, ProcessStreamResponse } from \"./types\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\nimport { IWebSocketWithEvents } from \"../platform/IWebSocket\";\r\nimport { IUser } from \"../options/IUser\";\r\n\r\nclass WebSocketDataSynchronizer implements IDataSynchronizer {\r\n  private socket?: IWebSocketWithEvents;\r\n  private readonly logger?: ILogger;\r\n\r\n  private connectionAttemptStartTime?: number;\r\n\r\n  constructor(\r\n    sdkKey: string,\r\n    user: IUser,\r\n    clientContext: ClientContext,\r\n    socket: IWebSocketWithEvents,\r\n    private readonly getStoreTimestamp: () => number,\r\n    private readonly listeners: Map<EventName, ProcessStreamResponse>,\r\n    webSocketPingInterval: number\r\n  ) {\r\n    const {logger, streamingUri} = clientContext;\r\n\r\n    this.logger = logger;\r\n    this.socket = socket;\r\n    this.socket.config({\r\n      sdkKey,\r\n      streamingUri,\r\n      pingInterval: webSocketPingInterval,\r\n      user,\r\n      logger,\r\n      getStoreTimestamp\r\n    });\r\n\r\n    this.listeners.forEach(({deserializeData, processJson}, eventName) => {\r\n      this.socket?.addListener(eventName, (event) => {\r\n        this.logger?.debug(`Received ${ eventName } event`);\r\n\r\n        if (event?.data) {\r\n          const {featureFlags, userKeyId} = event.data;\r\n          const data = deserializeData(featureFlags);\r\n          processJson(userKeyId, data);\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  identify(user: IUser): void {\r\n    this.socket?.identify(user);\r\n  }\r\n\r\n  start(): void {\r\n    this.logConnectionStarted();\r\n\r\n    this.socket?.connect();\r\n  }\r\n\r\n  private logConnectionStarted() {\r\n    this.connectionAttemptStartTime = Date.now();\r\n    this.logger?.info(`Stream connection attempt StartTime ${ this.connectionAttemptStartTime }`);\r\n  }\r\n\r\n  close(): void {\r\n    this.stop();\r\n  }\r\n\r\n  stop(): void {\r\n    this.socket?.close();\r\n    this.socket = undefined;\r\n  }\r\n}\r\n\r\nexport default WebSocketDataSynchronizer;","export * from './DataSyncMode';\r\nexport * from './IDataSynchronizer';\r\nexport * from './IRequestor';\r\nexport * from './NullDataSynchronizer';\r\nexport * from './PollingDataSynchronizer';\r\nexport * from './Requestor';\r\nexport * from './types';\r\nexport * from './utils';\r\nexport * from './WebSocketDataSynchronizer';","import { PollingError } from \"../errors\";\r\nimport { IFlag } from \"../evaluation/data/IFlag\";\r\n\r\nexport type PollingErrorHandler = (err: PollingError) => void;\r\n\r\nexport enum StreamResponseEventType {\r\n  full = 'full',\r\n  patch = 'patch'\r\n}\r\n\r\nexport interface IStreamResponse {\r\n  eventType: StreamResponseEventType,\r\n  featureFlags: IFlag[]\r\n}\r\n\r\nexport type EventName = 'delete' | 'patch' | 'ping' | 'put';\r\nexport type ProcessStreamResponse = {\r\n  deserializeData: (flags: IFlag[]) => any;\r\n  processJson: (userKeyId: string, json: any) => void;\r\n};","/********************** encode text begin *****************************/\r\nconst alphabet: Record<string, string> = {\r\n  \"0\": \"Q\",\r\n  \"1\": \"B\",\r\n  \"2\": \"W\",\r\n  \"3\": \"S\",\r\n  \"4\": \"P\",\r\n  \"5\": \"H\",\r\n  \"6\": \"D\",\r\n  \"7\": \"X\",\r\n  \"8\": \"Z\",\r\n  \"9\": \"U\",\r\n}\r\n\r\nfunction encodeNumber(param: number, length: number): string {\r\n  var s = \"000000000000\" + param;\r\n  const numberWithLeadingZeros = s.slice(s.length - length);\r\n  return numberWithLeadingZeros.split('').map(n => alphabet[n]).join('');\r\n}\r\n\r\n// generate connection token\r\nexport function generateConnectionToken(text: string): string {\r\n  text = text.replace(/=*$/, '');\r\n  const timestamp = Date.now();\r\n  const timestampCode = encodeNumber(timestamp, timestamp.toString().length);\r\n  // get random number less than the length of the text as the start point, and it must be greater or equal to 2\r\n  const start = Math.max(Math.floor(Math.random() * text.length), 2);\r\n\r\n  return `${ encodeNumber(start, 3) }${ encodeNumber(timestampCode.length, 2) }${ text.slice(0, start) }${ timestampCode }${ text.slice(start) }`;\r\n}\r\n\r\n/********************** encode text end *****************************/","export class PollingError extends Error {\r\n  public readonly status?: number;\r\n\r\n  constructor(message: string, status?: number) {\r\n    super(message);\r\n    this.status = status;\r\n    this.name = 'FbPollingError';\r\n  }\r\n}\r\n\r\nexport class StreamingError extends Error {\r\n  public readonly code?: number;\r\n\r\n  constructor(message: string, code?: number) {\r\n    super(message);\r\n    this.code = code;\r\n    this.name = 'FbStreamingError';\r\n  }\r\n}\r\n\r\nexport class UnexpectedResponseError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'FbUnexpectedResponseError';\r\n  }\r\n}\r\n\r\n\r\nexport class ClientError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'FbClientError';\r\n  }\r\n}\r\n\r\nexport function isHttpRecoverable(status: number) {\r\n  if (status >= 400 && status < 500) {\r\n    return status === 400 || status === 408 || status === 429;\r\n  }\r\n  return true;\r\n}","import { ReasonKinds } from \"./ReasonKinds\";\r\nimport { IFlag } from \"./data/IFlag\";\r\nimport { EvalEvent } from \"../events/event\";\r\nimport { IUser } from \"../options/IUser\";\r\n\r\n/**\r\n * A class which encapsulates the result of an evaluation. It allows for differentiating between\r\n * successful and error result types.\r\n *\r\n * @internal\r\n */\r\nexport default class EvalResult {\r\n  protected constructor(\r\n    public kind: ReasonKinds,\r\n    public value: IFlag | null,\r\n    public reason?: string,\r\n  ) {\r\n  }\r\n\r\n  static flagNotFound(flagKey: string) {\r\n    return new EvalResult(ReasonKinds.FlagNotFound, null, `flag not found: ${ flagKey }`);\r\n  }\r\n\r\n  static matched(val: IFlag) {\r\n    return new EvalResult(ReasonKinds.Match, val, 'target match');\r\n  }\r\n\r\n  toEvalEvent(user: IUser): EvalEvent | null {\r\n    if (this.kind !== ReasonKinds.Match) {\r\n      return null;\r\n    }\r\n\r\n    const targetedVariation = this.value?.variations.find(v => v.value === this.value?.variation);\r\n    return new EvalEvent(user, this.value?.id!, targetedVariation!, this.value?.sendToExperiment!);\r\n  }\r\n}","import { IFlag } from \"./data/IFlag\";\r\nimport EvalResult from \"./EvalResult\";\r\nimport { IStore } from \"../platform/IStore\";\r\nimport DataKinds from \"../store/DataKinds\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport default class Evaluator {\r\n  constructor(private store: IStore) {\r\n  }\r\n\r\n  /**\r\n   * Evaluate the given flag against the given context.\r\n   * @param flagKey The key of the feature flag.\r\n   */\r\n  evaluate(\r\n    flagKey: string,\r\n  ): EvalResult {\r\n    const flag = this.store.get(DataKinds.Flags, flagKey) as unknown as IFlag;\r\n    if (!flag) {\r\n      return EvalResult.flagNotFound(flagKey);\r\n    }\r\n\r\n    return EvalResult.matched(flag);\r\n  }\r\n}","/**\r\n * Different kinds of error which may be encountered during evaluation.\r\n */\r\nexport enum ReasonKinds {\r\n  ClientNotReady = 'ClientNotReady',\r\n  Match = 'Match',\r\n  WrongType = 'WrongType',\r\n  FlagNotFound = 'FlagNotFound',\r\n  Error = 'Error'\r\n}","export type FlagValue = any;\r\n\r\nexport enum VariationDataType {\r\n  string = 'string',\r\n  boolean = 'boolean',\r\n  number = 'number',\r\n  json = 'json',\r\n  empty = ''\r\n}\r\n\r\nexport interface IVariation {\r\n  id: number,\r\n  value: FlagValue\r\n}\r\n\r\nexport interface IFlagBase {\r\n  id: string, // the key\r\n  variation: FlagValue,\r\n  variationType: VariationDataType,\r\n  sendToExperiment: boolean,\r\n  timestamp: number,\r\n  variationOptions?: IVariation[],\r\n}\r\n\r\nexport interface IFlag extends IFlagBase {\r\n  key: string, // the same value to id\r\n  variations: IVariation[],// the same value to variationOptions\r\n  version: number\r\n}\r\n","export * from './IFlag';","export * from './data';\r\nexport * from './EvalResult';\r\nexport * from './Evaluator';\r\nexport * from './IEvalDetail';\r\nexport * from './operator';\r\nexport * from './ReasonKinds';","import { Regex } from \"../utils/Regex\";\r\n\r\nexport enum OperatorTypes {\r\n  // numeric\r\n  LessThan = \"LessThan\",\r\n  BiggerThan = \"BiggerThan\",\r\n  LessEqualThan = \"LessEqualThan\",\r\n  BiggerEqualThan = \"BiggerEqualThan\",\r\n\r\n  // compare\r\n  Equal = \"Equal\",\r\n  NotEqual = \"NotEqual\",\r\n\r\n  // contains/not contains\r\n  Contains = \"Contains\",\r\n  NotContain = \"NotContain\",\r\n\r\n  // starts with/ends with\r\n  StartsWith = \"StartsWith\",\r\n  EndsWith = \"EndsWith\",\r\n\r\n  // match regex/not match regex\r\n  MatchRegex = \"MatchRegex\",\r\n  NotMatchRegex = \"NotMatchRegex\",\r\n\r\n  // is one of/ not one of\r\n  IsOneOf = \"IsOneOf\",\r\n  NotOneOf = \"NotOneOf\",\r\n\r\n  // is true/ is false\r\n  IsTrue = \"IsTrue\",\r\n  IsFalse = \"IsFalse\",\r\n}\r\n\r\nexport class Operator {\r\n\r\n  constructor(private readonly operation: string, private readonly func: (param1: string, param2: string) => boolean) {\r\n  }\r\n\r\n  public isMatch(value: string, conditionValue: string) {\r\n    if (value === null || conditionValue === null) {\r\n      return false;\r\n    }\r\n\r\n    return this.func(value, conditionValue);\r\n  }\r\n\r\n  /***************** numeric ********************/\r\n  public static readonly LessThan: Operator =\r\n    new Operator(OperatorTypes.LessThan, Operator.numericOperator(-1, -1));\r\n\r\n  public static readonly LessEqualThan: Operator =\r\n    new Operator(OperatorTypes.LessEqualThan, Operator.numericOperator(-1, 0));\r\n\r\n  public static readonly BiggerThan: Operator =\r\n    new Operator(OperatorTypes.BiggerThan, Operator.numericOperator(1, 1));\r\n\r\n  public static readonly BiggerEqualThan: Operator =\r\n    new Operator(OperatorTypes.BiggerEqualThan, Operator.numericOperator(1, 0));\r\n\r\n\r\n  private static numericOperator(\r\n    desiredComparisonResult: number,\r\n    otherDesiredComparisonResult: number): (param1: string, param2: string) => boolean {\r\n    return (param1: string, param2: string) => {\r\n      const param1FloatValue = parseFloat(param1);\r\n      const param2FloatValue = parseFloat(param2);\r\n\r\n      // Check if parsing fails or if values are NaN\r\n      if (isNaN(param1FloatValue) || isNaN(param2FloatValue)) {\r\n        return false;\r\n      }\r\n\r\n      // Compare the parsed double values and return true if the result matches\r\n      const result = Math.sign(param1FloatValue - param2FloatValue);\r\n      return result === desiredComparisonResult || result === otherDesiredComparisonResult;\r\n    }\r\n  }\r\n\r\n  /*********************** string compare *******************************/\r\n  public static readonly Equal: Operator =\r\n    new Operator(OperatorTypes.Equal, (param1: string, param2: string) => param1 === param2);\r\n\r\n  public static readonly NotEqual: Operator =\r\n    new Operator(OperatorTypes.NotEqual, (param1: string, param2: string) => param1 !== param2);\r\n\r\n  /*********************** string contains/not contains *******************************/\r\n  public static readonly Contains: Operator =\r\n    new Operator(OperatorTypes.Contains, (param1: string, param2: string) => param1.includes(param2));\r\n\r\n  public static readonly NotContains: Operator =\r\n    new Operator(OperatorTypes.NotContain, (param1: string, param2: string) => !param1.includes(param2));\r\n\r\n  /*********************** string starts with/end with *******************************/\r\n  public static readonly StartsWith: Operator =\r\n    new Operator(OperatorTypes.StartsWith, (param1: string, param2: string) => param1.startsWith(param2));\r\n\r\n  public static readonly EndsWith: Operator =\r\n    new Operator(OperatorTypes.EndsWith, (param1: string, param2: string) => param1.endsWith(param2));\r\n\r\n  /*********************** regex *******************************/\r\n  public static readonly MatchRegex: Operator =\r\n    new Operator(OperatorTypes.MatchRegex, (pattern: string, param2: string) => Regex.fromString(pattern).test(param2));\r\n\r\n  public static readonly NotMatchRegex: Operator =\r\n    new Operator(OperatorTypes.NotMatchRegex, (pattern: string, param2: string) => !Regex.fromString(pattern).test(param2));\r\n\r\n  /*********************** is one of/ not one of *******************************/\r\n  public static readonly IsOneOf: Operator =\r\n    new Operator(OperatorTypes.IsOneOf, (param1: string, param2: string) => {\r\n      try {\r\n        const values: string[] = JSON.parse(param2);\r\n        return values.includes(param1);\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    });\r\n\r\n  public static readonly NotOneOf: Operator =\r\n    new Operator(OperatorTypes.NotOneOf, (param1: string, param2: string) => {\r\n      try {\r\n        const values: string[] = JSON.parse(param2);\r\n        return !values.includes(param1);\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    });\r\n\r\n  /*********************** is true/ is false *******************************/\r\n  public static readonly IsTrue: Operator =\r\n    new Operator(OperatorTypes.IsTrue, (param1: string, _: string) => param1?.toUpperCase() === 'TRUE');\r\n\r\n  public static readonly IsFalse: Operator =\r\n    new Operator(OperatorTypes.IsFalse, (param1: string, _: string) => param1?.toUpperCase() === 'FALSE');\r\n\r\n  public static All = [\r\n    // numeric\r\n    Operator.LessThan, Operator.LessEqualThan, Operator.BiggerThan, Operator.BiggerEqualThan,\r\n\r\n    // string compare\r\n    Operator.Equal, Operator.NotEqual,\r\n\r\n    // string contains/not contains\r\n    Operator.Contains, Operator.NotContains,\r\n\r\n    // string starts with/ends with\r\n    Operator.StartsWith, Operator.EndsWith,\r\n\r\n    // string match regex/not match regex\r\n    Operator.MatchRegex, Operator.NotMatchRegex,\r\n\r\n    // is one of/ not one of\r\n    Operator.IsOneOf, Operator.NotOneOf,\r\n\r\n    // is true/ is false\r\n    Operator.IsTrue, Operator.IsFalse\r\n  ]\r\n\r\n  public static get(operation: string) {\r\n    const op = Operator.All.find(o => o.operation === operation);\r\n\r\n    return op ?? new Operator(operation, (param1: string, param2: string) => false);\r\n  }\r\n}","import { IEventProcessor } from \"./IEventProcessor\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport ClientContext from \"../options/ClientContext\";\r\nimport { FlushEvent, IEvent, ShutdownEvent } from \"./event\";\r\nimport { isNullOrUndefined } from \"../utils/isNullOrUndefined\";\r\nimport { IEventQueue } from \"./IEventQueue\";\r\nimport { DefaultEventQueue } from \"./DefaultEventQueue\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\n\r\nexport class DefaultEventProcessor implements IEventProcessor {\r\n  private readonly logger: ILogger;\r\n  private readonly flushInterval: number;\r\n  private readonly eventDispatcher: EventDispatcher;\r\n  private readonly eventQueue: IEventQueue;\r\n  private closed: boolean = false;\r\n\r\n  constructor(clientContext: ClientContext) {\r\n    const {logger, flushInterval, maxEventsInQueue} = clientContext;\r\n    this.logger = logger!;\r\n    this.flushInterval = flushInterval;\r\n    this.eventQueue = new DefaultEventQueue(maxEventsInQueue, this.logger);\r\n    this.eventDispatcher = new EventDispatcher(clientContext, this.eventQueue);\r\n\r\n    this.flushLoop();\r\n  }\r\n\r\n  private flushLoop() {\r\n    if (this.closed) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(async () => {\r\n      try {\r\n        await this.flush();\r\n      } catch (err) {\r\n        this.logger.error('Unexpected error while flushing events in event processor.', err);\r\n      }\r\n\r\n      this.flushLoop();\r\n    }, this.flushInterval);\r\n  }\r\n\r\n  flush(): Promise<any> {\r\n    const flushEvent = new FlushEvent();\r\n    this.record(flushEvent);\r\n    return flushEvent.waitForCompletion();\r\n  }\r\n\r\n  async close(): Promise<void> {\r\n    if (this.closed) {\r\n      return;\r\n    }\r\n\r\n    // send a shutdown event to dispatcher\r\n    const shutdown = new ShutdownEvent();\r\n    this.record(shutdown);\r\n\r\n    try {\r\n      await shutdown.waitForCompletion();\r\n    } catch (err) {\r\n      this.logger.error('Event processor shutdown but not complete.');\r\n    }\r\n\r\n    // mark the event queue as complete for adding\r\n    this.eventQueue.close();\r\n    this.closed = true;\r\n  }\r\n\r\n  record(event: IEvent | null): boolean {\r\n    if (isNullOrUndefined(event)) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.eventQueue.addEvent(event!)) {\r\n      if (event instanceof FlushEvent) {\r\n        event.complete();\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}","import { IEventQueue } from \"./IEventQueue\";\r\nimport { IEvent } from \"./event\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\n\r\nexport class DefaultEventQueue implements IEventQueue {\r\n  private events: IEvent[];\r\n  private closed: boolean = false;\r\n\r\n  constructor(private readonly capacity: number, private readonly logger: ILogger) {\r\n    this.events = [];\r\n  }\r\n\r\n  addEvent(event: IEvent): boolean {\r\n    if (this.closed) {\r\n      return false;\r\n    }\r\n\r\n    if (this.events.length >= this.capacity) {\r\n      this.logger.warn(\"Events are being produced faster than they can be processed. We shouldn't see this.\");\r\n      return false;\r\n    }\r\n\r\n    this.events.push(event);\r\n    return true;\r\n  }\r\n\r\n  clear(): void {\r\n    this.events = [];\r\n  }\r\n\r\n  shift(): IEvent | undefined {\r\n    return this.events.shift();\r\n  }\r\n\r\n  close(): void {\r\n    this.closed = true;\r\n  }\r\n\r\n  get eventsSnapshot(): IEvent[] {\r\n    return [...this.events];\r\n  }\r\n\r\n  get length(): number {\r\n    return this.events.length;\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return this.length === 0;\r\n  }\r\n}","import { DeliveryStatus, IEventSender, IEventSenderResult } from \"./IEventSender\";\r\nimport ClientContext from \"../options/ClientContext\";\r\nimport { defaultHeaders, httpErrorMessage } from \"../utils/http\";\r\nimport { IRequests } from \"../platform/requests\";\r\nimport { isHttpRecoverable, UnexpectedResponseError } from \"../errors\";\r\nimport sleep from \"../utils/sleep\";\r\n\r\nexport class DefaultEventSender implements IEventSender {\r\n  private readonly defaultHeaders: {\r\n    [key: string]: string;\r\n  };\r\n  private readonly eventsUri: string;\r\n  private requests: IRequests;\r\n\r\n  constructor(clientContext: ClientContext) {\r\n    const {\r\n      sdkKey,\r\n      eventsUri,\r\n      platform\r\n    } = clientContext;\r\n\r\n    const {info, requests} = platform;\r\n    this.defaultHeaders = defaultHeaders(sdkKey, info);\r\n    this.eventsUri = eventsUri;\r\n    this.requests = requests;\r\n  }\r\n\r\n  async send(payload: string, retry: boolean): Promise<IEventSenderResult> {\r\n    const res: IEventSenderResult = {\r\n      status: DeliveryStatus.Succeeded,\r\n    };\r\n\r\n    const headers: Record<string, string> = {\r\n      ...this.defaultHeaders,\r\n      'content-type': 'application/json',\r\n    }\r\n\r\n    let error;\r\n    try {\r\n      const {status} = await this.requests.fetch(this.eventsUri, {\r\n        headers,\r\n        body: payload,\r\n        method: 'POST',\r\n      });\r\n\r\n      if (status >= 200 && status <= 299) {\r\n        return res;\r\n      }\r\n\r\n      error = new UnexpectedResponseError(\r\n        httpErrorMessage({status, message: 'some events were dropped'}, 'event posting'),\r\n      );\r\n\r\n      if (!isHttpRecoverable(status)) {\r\n        res.status = DeliveryStatus.FailedAndMustShutDown;\r\n        res.error = error;\r\n        return res;\r\n      }\r\n    } catch (err) {\r\n      error = err;\r\n    }\r\n\r\n    // recoverable but not retrying\r\n    if (error && !retry) {\r\n      res.status = DeliveryStatus.Failed;\r\n      res.error = error;\r\n      return res;\r\n    }\r\n\r\n    // wait 1 second before retrying\r\n    await sleep();\r\n\r\n    return this.send(payload, false);\r\n  }\r\n}","import { IEventSerializer } from \"./EventSerializer\";\r\nimport { EvalEvent, IEvent, MetricEvent } from \"./event\";\r\n\r\nexport class DefaultEventSerializer implements IEventSerializer {\r\n  serialize(events: IEvent[]): string {\r\n    const payload = events\r\n      .map(event => event instanceof EvalEvent || event instanceof MetricEvent ? event.toPayload() : null)\r\n      .filter(event => event !== null);\r\n\r\n    return JSON.stringify(payload);\r\n  }\r\n}","import { ILogger } from \"../logging/ILogger\";\r\nimport ClientContext from \"../options/ClientContext\";\r\nimport { DeliveryStatus, IEventSender } from \"./IEventSender\";\r\nimport { IEventQueue } from \"./IEventQueue\";\r\nimport { DefaultEventQueue } from \"./DefaultEventQueue\";\r\nimport { DefaultEventSender } from \"./DefaultEventSender\";\r\nimport { AsyncEvent, FlushEvent, IEvent, PayloadEvent, ShutdownEvent } from \"./event\";\r\nimport { IEventSerializer } from \"./EventSerializer\";\r\nimport { DefaultEventSerializer } from \"./DefaultEventSerializer\";\r\nimport sleep from \"../utils/sleep\";\r\n\r\nexport class EventDispatcher {\r\n  private readonly logger: ILogger;\r\n  private sender: IEventSender;\r\n  private buffer: IEventQueue;\r\n  private serializer: IEventSerializer;\r\n\r\n  private maxEventPerRequest = 50;\r\n  private stopped: boolean = false;\r\n\r\n  constructor(clientContext: ClientContext, queue: IEventQueue) {\r\n    const {logger, maxEventsInQueue} = clientContext;\r\n    this.logger = logger!;\r\n\r\n    this.buffer = new DefaultEventQueue(maxEventsInQueue, this.logger);\r\n    this.sender = new DefaultEventSender(clientContext);\r\n    this.serializer = new DefaultEventSerializer();\r\n\r\n    this.dispatchLoop(queue).then();\r\n  }\r\n\r\n  private async dispatchLoop(queue: IEventQueue) {\r\n    this.logger.debug('Start dispatch loop.');\r\n\r\n    let running = true;\r\n    while (running) {\r\n      try {\r\n        const event = queue.shift();\r\n\r\n        if (event === undefined) {\r\n          await sleep(1000);\r\n          continue;\r\n        }\r\n\r\n        if (event instanceof PayloadEvent) {\r\n          this.addEventToBuffer(event);\r\n        } else if (event instanceof FlushEvent) {\r\n          await this.triggerFlush(event);\r\n        } else if (event instanceof ShutdownEvent) {\r\n          await this.triggerFlush(event);\r\n          this.stopped = true;\r\n          running = false;\r\n        }\r\n      } catch (err) {\r\n        this.logger.error('Unexpected error in event dispatcher.', err);\r\n      }\r\n    }\r\n\r\n    this.logger.debug('Finish dispatch loop.');\r\n  }\r\n\r\n  private addEventToBuffer(event: IEvent) {\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    if (this.buffer.addEvent(event)) {\r\n      this.logger.debug('Added event to buffer.');\r\n    } else {\r\n      this.logger.warn('Exceeded event queue capacity, event will be dropped. Increase capacity to avoid dropping events.');\r\n    }\r\n  }\r\n\r\n  private async triggerFlush(event: AsyncEvent) {\r\n    if (this.stopped) {\r\n      event.complete();\r\n      return;\r\n    }\r\n\r\n    if (this.buffer.isEmpty) {\r\n      event.complete();\r\n      this.logger.debug('Flush empty buffer.');\r\n      // There are no events to flush. If we don't complete the message, then the async task may never\r\n      // complete (if it had a non-zero positive timeout, then it would complete after the timeout).\r\n      return;\r\n    }\r\n\r\n    const snapshot = this.buffer.eventsSnapshot;\r\n    this.buffer.clear();\r\n    try {\r\n      await this.flushEvents(snapshot);\r\n      this.logger.debug(`${ snapshot.length } events has been flushed.`);\r\n    } catch (err) {\r\n      this.logger.warn('Exception happened when flushing events', err);\r\n    }\r\n\r\n    event.complete();\r\n  }\r\n\r\n  private async flushEvents(events: IEvent[]) {\r\n    const total = events.length;\r\n    for (let i = 0; i < total; i += this.maxEventPerRequest) {\r\n      const length = Math.min(this.maxEventPerRequest, total - i);\r\n      const slice = events.slice(i, i + length);\r\n      const payload = this.serializer.serialize(slice);\r\n\r\n      const {status} = await this.sender.send(payload, true);\r\n      if (status === DeliveryStatus.FailedAndMustShutDown) {\r\n        this.stopped = true;\r\n      }\r\n    }\r\n  }\r\n}","export enum DeliveryStatus {\r\n  Succeeded,\r\n  Failed,\r\n  FailedAndMustShutDown\r\n}\r\n\r\nexport interface IEventSenderResult {\r\n  status: DeliveryStatus,\r\n  error?: any\r\n}\r\n\r\nexport interface IEventSender {\r\n  send(payload: string, retry: boolean): Promise<IEventSenderResult>;\r\n}","import { IEventProcessor } from \"./IEventProcessor\";\r\nimport { IEvent } from \"./event\";\r\n\r\nexport class NullEventProcessor implements IEventProcessor {\r\n  flush(): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  close(): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  record(event: IEvent | null): boolean {\r\n    return false;\r\n  }\r\n}","import { IUser } from \"../options/IUser\";\r\nimport { IVariation } from \"../evaluation/data/IFlag\";\r\n\r\nexport interface IEvent {\r\n}\r\n\r\nexport class AsyncEvent implements IEvent {\r\n  private readonly isCompletedPromise?: Promise<AsyncEvent>;\r\n  private resolveFn?: (value: AsyncEvent) => void;\r\n\r\n  constructor() {\r\n    this.isCompletedPromise = new Promise<AsyncEvent>((resolve) => {\r\n      this.resolveFn = resolve;\r\n    });\r\n  }\r\n\r\n  waitForCompletion(): Promise<AsyncEvent> {\r\n    return this.isCompletedPromise!;\r\n  }\r\n\r\n  complete() {\r\n    this.resolveFn?.(this);\r\n  }\r\n}\r\n\r\nexport class FlushEvent extends AsyncEvent {\r\n}\r\n\r\nexport class ShutdownEvent extends AsyncEvent {\r\n}\r\n\r\nexport class PayloadEvent implements IEvent {\r\n  toPayload(): any {\r\n  };\r\n}\r\n\r\nexport class MetricEvent extends PayloadEvent {\r\n  timestamp: number;\r\n\r\n  constructor(\r\n    public user: IUser,\r\n    public eventName: string,\r\n    public appType: string,\r\n    public metricValue: number\r\n  ) {\r\n    super();\r\n    this.timestamp = new Date().getTime();\r\n  }\r\n\r\n  private userPayload() {\r\n    return {\r\n      keyId: this.user.keyId,\r\n      name: this.user.name,\r\n      customizedProperties: this.user.customizedProperties\r\n    }\r\n  }\r\n\r\n  toPayload(): any {\r\n    return {\r\n      user: this.userPayload(),\r\n      metrics: [{\r\n        route: 'index/metric',\r\n        timestamp: this.timestamp,\r\n        numericValue: this.metricValue,\r\n        appType: this.appType,\r\n        eventName: this.eventName,\r\n        type: 'CustomEvent'\r\n      }]\r\n    }\r\n  }\r\n}\r\n\r\nexport class EvalEvent extends PayloadEvent {\r\n  timestamp: number;\r\n\r\n  constructor(\r\n    public user: IUser,\r\n    public flagKey: string,\r\n    public variation: IVariation,\r\n    public sendToExperiment: boolean\r\n  ) {\r\n    super();\r\n    this.timestamp = new Date().getTime();\r\n  }\r\n\r\n  private userPayload() {\r\n    return {\r\n      keyId: this.user.keyId,\r\n      name: this.user.name,\r\n      customizedProperties: this.user.customizedProperties\r\n    }\r\n  }\r\n\r\n  toPayload(): any {\r\n    return {\r\n      user: this.userPayload(),\r\n      variations: [{\r\n        featureFlagKey: this.flagKey,\r\n        sendToExperiment: this.sendToExperiment,\r\n        timestamp: this.timestamp,\r\n        variation: this.variation\r\n      }]\r\n    }\r\n  }\r\n}","export * from './DefaultEventProcessor';\r\nexport * from './DefaultEventQueue';\r\nexport * from './DefaultEventSender';\r\nexport * from './DefaultEventSerializer';\r\nexport * from './event';\r\nexport * from './EventDispatcher';\r\nexport * from './EventSerializer';\r\nexport * from './IEventProcessor';\r\nexport * from './IEventQueue';\r\nexport * from './IEventSender';\r\nexport * from './NullEventProcessor';\r\n","export * from './bootstrap';\r\nexport * from './data-sources';\r\nexport * from './evaluation';\r\nexport * from './events';\r\nexport * from './logging';\r\nexport * from './options';\r\nexport * from './platform';\r\nexport * from './store';\r\nexport * from './data-sync';\r\nexport * from './utils';\r\n\r\nexport * from './Configuration';\r\nexport * from './constants';\r\nexport * from './Context';\r\nexport * from './errors';\r\nexport * from './FbClientBuilder';\r\nexport * from './IContextProperty';\r\nexport * from './IDataKind';\r\nexport * from './IFbClient';\r\nexport * from './IVersionedData';\r\n\r\n","import format from './format';\r\nimport { ILogger } from \"./ILogger\";\r\nimport { IBasicLoggerOptions } from \"./IBasicLoggerOptions\";\r\n\r\nconst LogPriority = {\r\n  debug: 0,\r\n  info: 1,\r\n  warn: 2,\r\n  error: 3,\r\n  none: 4,\r\n};\r\n\r\nconst LevelNames = ['debug', 'info', 'warn', 'error', 'none'];\r\n\r\n/**\r\n * A basic logger which handles filtering by level.\r\n *\r\n * With the default options it will write to `console.error`\r\n * and it will use the formatting provided by `console.error`.\r\n * If the destination is overwritten, then it will use an included\r\n * formatter similar to `util.format`.\r\n *\r\n * If a formatter is available, then that should be overridden\r\n * as well for performance.\r\n */\r\nexport class BasicLogger implements ILogger {\r\n  private logLevel: number;\r\n\r\n  private name: string;\r\n\r\n  private destination?: (line: string) => void;\r\n\r\n  private formatter?: (...args: any[]) => string;\r\n\r\n  /**\r\n   * This should only be used as a default fallback and not as a convenient\r\n   * solution. In most cases you should construct a new instance with the\r\n   * appropriate options for your specific needs.\r\n   */\r\n  static get() {\r\n    return new BasicLogger({});\r\n  }\r\n\r\n  constructor(options: IBasicLoggerOptions) {\r\n    this.logLevel = LogPriority[options.level ?? 'info'] ?? LogPriority.info;\r\n    this.name = options.name ?? 'FeatBit';\r\n    // eslint-disable-next-line no-console\r\n    this.destination = options.destination;\r\n    this.formatter = options.formatter;\r\n  }\r\n\r\n  private tryFormat(...args: any[]): string {\r\n    try {\r\n      if (this.formatter) {\r\n        // In case the provided formatter fails.\r\n        return this.formatter?.(...args);\r\n      }\r\n      return format(...args);\r\n    } catch {\r\n      return format(...args);\r\n    }\r\n  }\r\n\r\n  private tryWrite(msg: string) {\r\n    try {\r\n      this.destination!(msg);\r\n    } catch {\r\n      // eslint-disable-next-line no-console\r\n      console.error(msg);\r\n    }\r\n  }\r\n\r\n  private log(level: number, args: any[]) {\r\n    if (level >= this.logLevel) {\r\n      const prefix = `${ LevelNames[level] }: [${ this.name }]`;\r\n      try {\r\n        if (this.destination) {\r\n          this.tryWrite(`${ prefix } ${ this.tryFormat(...args) }`);\r\n        } else {\r\n          // `console.error` has its own formatter.\r\n          // So we don't need to do anything.\r\n          // eslint-disable-next-line no-console\r\n          console.error(...args);\r\n        }\r\n      } catch {\r\n        // If all else fails do not break.\r\n        // eslint-disable-next-line no-console\r\n        console.error(...args);\r\n      }\r\n    }\r\n  }\r\n\r\n  error(...args: any[]): void {\r\n    this.log(LogPriority.error, args);\r\n  }\r\n\r\n  warn(...args: any[]): void {\r\n    this.log(LogPriority.warn, args);\r\n  }\r\n\r\n  info(...args: any[]): void {\r\n    this.log(LogPriority.info, args);\r\n  }\r\n\r\n  debug(...args: any[]): void {\r\n    this.log(LogPriority.debug, args);\r\n  }\r\n}\r\n","import { ILogger } from \"./ILogger\";\r\nimport { TypeValidators } from \"../options/Validators\";\r\n\r\nconst loggerRequirements = {\r\n  error: TypeValidators.Function,\r\n  warn: TypeValidators.Function,\r\n  info: TypeValidators.Function,\r\n  debug: TypeValidators.Function,\r\n};\r\n\r\n/**\r\n * The safeLogger logic exists because we allow the application to pass in a custom logger, but\r\n * there is no guarantee that the logger works correctly and if it ever throws exceptions there\r\n * could be serious consequences (e.g. an uncaught exception within an error event handler, due\r\n * to the SDK trying to log the error, can terminate the application). An exception could result\r\n * from faulty logic in the logger implementation, or it could be that this is not a logger at\r\n * all but some other kind of object; the former is handled by a catch block that logs an error\r\n * message to the SDK's default logger, and we can at least partly guard against the latter by\r\n * checking for the presence of required methods at configuration time.\r\n */\r\nexport default class SafeLogger implements ILogger {\r\n  private logger: ILogger;\r\n\r\n  private fallback: ILogger;\r\n\r\n  /**\r\n   * Construct a safe logger with the specified logger.\r\n   * @param logger The logger to use.\r\n   * @param fallback A fallback logger to use in case an issue is  encountered using\r\n   * the provided logger.\r\n   */\r\n  constructor(logger: ILogger, fallback: ILogger) {\r\n    Object.entries(loggerRequirements).forEach(([level, validator]) => {\r\n      if (!validator.is((logger as any)[level])) {\r\n        throw new Error(`Provided logger instance must support logger.${ level }(...) method`);\r\n        // Note that the SDK normally does not throw exceptions to the application, but that rule\r\n        // does not apply to FbClientNode.init() which will throw an exception if the parameters are so\r\n        // invalid that we cannot proceed with creating the client. An invalid logger meets those\r\n        // criteria since the SDK calls the logger during nearly all of its operations.\r\n      }\r\n    });\r\n    this.logger = logger;\r\n    this.fallback = fallback;\r\n  }\r\n\r\n  private log(level: 'error' | 'warn' | 'info' | 'debug', args: any[]) {\r\n    try {\r\n      this.logger[level](...args);\r\n    } catch {\r\n      // If all else fails do not break.\r\n      this.fallback[level](...args);\r\n    }\r\n  }\r\n\r\n  error(...args: any[]): void {\r\n    this.log('error', args);\r\n  }\r\n\r\n  warn(...args: any[]): void {\r\n    this.log('warn', args);\r\n  }\r\n\r\n  info(...args: any[]): void {\r\n    this.log('info', args);\r\n  }\r\n\r\n  debug(...args: any[]): void {\r\n    this.log('debug', args);\r\n  }\r\n}","import { TypeValidators } from \"../options/Validators\";\r\n\r\n\r\n/**\r\n * Attempt to produce a string representation of a value.\r\n * The format should be roughly comparable to `util.format`\r\n * aside from object which will be JSON versus the `util.inspect`\r\n * format.\r\n * @param val\r\n * @returns A string representation of the value if possible.\r\n */\r\nfunction tryStringify(val: any) {\r\n  if (typeof val === 'string') {\r\n    return val;\r\n  }\r\n  if (val === undefined) {\r\n    return 'undefined';\r\n  }\r\n  if (val === null) {\r\n    return 'null';\r\n  }\r\n  if (Object.prototype.hasOwnProperty.call(val, 'toString')) {\r\n    try {\r\n      return val.toString();\r\n    } catch {\r\n      /* Keep going */\r\n    }\r\n  }\r\n\r\n  if (typeof val === 'bigint') {\r\n    return `${ val }n`;\r\n  }\r\n  try {\r\n    return JSON.stringify(val);\r\n  } catch (error) {\r\n    if (error instanceof TypeError && error.message.indexOf('circular') >= 0) {\r\n      return '[Circular]';\r\n    }\r\n    return '[Not Stringifiable]';\r\n  }\r\n}\r\n\r\n/**\r\n * Attempt to produce a numeric representation.\r\n * BigInts have an `n` suffix.\r\n * @param val\r\n * @returns The numeric representation or 'NaN' if not numeric.\r\n */\r\nfunction toNumber(val: any): string {\r\n  // Symbol has to be treated special because it will\r\n  // throw an exception if an attempt is made to convert it.\r\n  if (typeof val === 'symbol') {\r\n    return 'NaN';\r\n  }\r\n  if (typeof val === 'bigint') {\r\n    return `${ val }n`;\r\n  }\r\n  return String(Number(val));\r\n}\r\n\r\n/**\r\n * Attempt to produce an integer representation.\r\n * BigInts have an `n` suffix.\r\n * @param val\r\n * @returns The integer representation or 'NaN' if not numeric.\r\n */\r\nfunction toInt(val: any): string {\r\n  if (typeof val === 'symbol') {\r\n    return 'NaN';\r\n  }\r\n  if (typeof val === 'bigint') {\r\n    return `${ val }n`;\r\n  }\r\n  return String(parseInt(val, 10));\r\n}\r\n\r\n/**\r\n * Attempt to produce a float representation.\r\n * BigInts have an `n` suffix.\r\n * @param val\r\n * @returns The integer representation or 'NaN' if not numeric.\r\n */\r\nfunction toFloat(val: any): string {\r\n  if (typeof val === 'symbol') {\r\n    return 'NaN';\r\n  }\r\n  return String(parseFloat(val));\r\n}\r\n\r\n// Based on:\r\n// https://nodejs.org/api/util.html#utilformatformat-args\r\n// The result will not match node exactly, but it should get the\r\n// right information through.\r\nconst escapes: Record<string, (val: any) => string> = {\r\n  s: (val: any) => tryStringify(val),\r\n  d: (val: any) => toNumber(val),\r\n  i: (val: any) => toInt(val),\r\n  f: (val: any) => toFloat(val),\r\n  j: (val: any) => tryStringify(val),\r\n  o: (val: any) => tryStringify(val),\r\n  O: (val: any) => tryStringify(val),\r\n  c: () => '',\r\n};\r\n\r\n/**\r\n * A basic formatted for use where `util.format` is not available.\r\n * This will not be as performant, but it will produce formatted\r\n * messages.\r\n *\r\n * @internal\r\n *\r\n * @param args\r\n * @returns Formatted string.\r\n */\r\nexport default function format(...args: any[]): string {\r\n  const formatString = args.shift();\r\n  if (TypeValidators.String.is(formatString)) {\r\n    let out = '';\r\n    let i = 0;\r\n    while (i < formatString.length) {\r\n      const char = formatString.charAt(i);\r\n      if (char === '%') {\r\n        const nextIndex = i + 1;\r\n        if (nextIndex < formatString.length) {\r\n          const nextChar = formatString.charAt(i + 1);\r\n          if (nextChar in escapes && args.length) {\r\n            const value = args.shift();\r\n            // This rule is for math.\r\n            // eslint-disable-next-line no-unsafe-optional-chaining\r\n            out += escapes[nextChar]?.(value);\r\n          } else if (nextChar === '%') {\r\n            out += '%';\r\n          } else {\r\n            out += `%${ nextChar }`;\r\n          }\r\n          i += 2;\r\n        }\r\n      } else {\r\n        out += char;\r\n        i += 1;\r\n      }\r\n    }\r\n    // If there are any args left after we exhaust the format string\r\n    // then just stick those on the end.\r\n    if (args.length) {\r\n      if (out.length) {\r\n        out += ' ';\r\n      }\r\n      out += args.map(tryStringify).join(' ');\r\n    }\r\n    return out;\r\n  }\r\n  return args.map(tryStringify).join(' ');\r\n}\r\n","export * from './BasicLogger';\r\nexport * from './format';\r\nexport * from './IBasicLoggerOptions';\r\nexport * from './ILogger';\r\nexport * from './LogLevel';\r\nexport * from './SafeLogger';","import { ILogger } from \"../logging/ILogger\";\r\nimport { IPlatform } from \"../platform/IPlatform\";\r\nimport { IClientContext } from \"./IClientContext\";\r\nimport { IUser } from \"./IUser\";\r\n\r\n/**\r\n * The client context provides basic configuration and platform support which are required\r\n * when building SDK components.\r\n */\r\nexport default class ClientContext implements IClientContext {\r\n  flushInterval: number;\r\n  maxEventsInQueue: number;\r\n  offline: boolean;\r\n  logger: ILogger;\r\n  eventsUri: string;\r\n  pollingUri: string;\r\n  streamingUri: string;\r\n\r\n  constructor(\r\n    public readonly sdkKey: string,\r\n    configuration: {\r\n      logger?: ILogger;\r\n      offline?: boolean;\r\n      flushInterval: number;\r\n      maxEventsInQueue: number;\r\n      streamingUri: string;\r\n      pollingUri: string;\r\n      eventsUri: string;\r\n    },\r\n    public readonly platform: IPlatform,\r\n  ) {\r\n    this.logger = configuration.logger!;\r\n    this.offline = configuration.offline!;\r\n    this.flushInterval = configuration.flushInterval;\r\n    this.maxEventsInQueue = configuration.maxEventsInQueue;\r\n    this.streamingUri = configuration.streamingUri;\r\n    this.pollingUri = configuration.pollingUri;\r\n    this.eventsUri = configuration.eventsUri;\r\n  }\r\n}","/**\r\n * Messages for issues which can be encountered from processing the configuration options.\r\n */\r\nexport default class OptionMessages {\r\n  static optionBelowMinimum(name: string, value: number, min: number): string {\r\n    return `Config option \"${ name }\" had invalid value of ${ value }, using minimum of ${ min } instead`;\r\n  }\r\n\r\n  static unknownOption(name: string): string {\r\n    return `Ignoring unknown config option \"${ name }\"`;\r\n  }\r\n\r\n  static wrongOptionType(name: string, expectedType: string, actualType: string): string {\r\n    return `Config option \"${ name }\" should be of type ${ expectedType }, got ${ actualType }, using default value`;\r\n  }\r\n\r\n  static wrongOptionTypeBoolean(name: string, actualType: string): string {\r\n    return `Config option \"${ name }\" should be a boolean, got ${ actualType }, converting to boolean`;\r\n  }\r\n\r\n  static partialEndpoint(name: string): string {\r\n    return `You have set custom uris without specifying the ${ name } URI; connections may not work properly`;\r\n  }\r\n\r\n  static mandatory(name: string): string {\r\n    return `${ name } is mandatory`;\r\n  }\r\n}","import { IUser } from \"./IUser\";\r\nimport {IContextProperty} from \"../IContextProperty\";\r\n\r\n/**\r\n * Creates an instance of the FeatBit user.\r\n *\r\n * @return\r\n *   The new {@link IUser} instance.\r\n */\r\nexport class UserBuilder {\r\n  private _keyId: string = '';\r\n  private _name: string = '';\r\n  private _custom: IContextProperty[] = [];\r\n\r\n  constructor(keyId: string) {\r\n    this._keyId = keyId;\r\n  }\r\n\r\n  name(name: string): UserBuilder {\r\n    this._name = name;\r\n    return this;\r\n  }\r\n\r\n  custom(propertyName: string, value: string): UserBuilder {\r\n    this._custom?.push({ name: propertyName, value: value });\r\n    return this;\r\n  }\r\n\r\n  build(): IUser {\r\n    return {\r\n      name: this._name,\r\n      keyId: this._keyId,\r\n      customizedProperties: this._custom\r\n    };\r\n  }\r\n}","/* eslint-disable class-methods-use-this */\r\n/* eslint-disable max-classes-per-file */\r\n\r\n// The classes here are static, but needs to be instantiated to\r\n// support the generic functionality. Which is why we do not care about using\r\n// `this`\r\n\r\n// These validators are also of trivial complexity, so we are allowing more than\r\n// one per file.\r\n\r\nimport OptionMessages from \"./OptionMessages\";\r\n\r\n/**\r\n * Interface for type validation.\r\n */\r\nexport interface TypeValidator {\r\n  // holding validation error messages\r\n  messages?: string[];\r\n\r\n  is(u: unknown): boolean;\r\n\r\n  getType(): string;\r\n}\r\n\r\n/**\r\n * Validate a factory or instance.\r\n */\r\nexport class FactoryOrInstance implements TypeValidator {\r\n  is(factoryOrInstance: unknown) {\r\n    if (Array.isArray(factoryOrInstance)) {\r\n      return false;\r\n    }\r\n    const anyFactory = factoryOrInstance as any;\r\n    const typeOfFactory = typeof anyFactory;\r\n    return typeOfFactory === 'function' || typeOfFactory === 'object';\r\n  }\r\n\r\n  getType(): string {\r\n    return 'factory method or object';\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a basic type.\r\n */\r\nexport class Type<T> implements TypeValidator {\r\n  private typeName: string;\r\n\r\n  protected typeOf: string;\r\n\r\n  constructor(typeName: string, example: T) {\r\n    this.typeName = typeName;\r\n    this.typeOf = typeof example;\r\n  }\r\n\r\n  is(u: unknown): u is T {\r\n    if (Array.isArray(u)) {\r\n      return false;\r\n    }\r\n    return typeof u === this.typeOf;\r\n  }\r\n\r\n  getType(): string {\r\n    return this.typeName;\r\n  }\r\n}\r\n\r\n/**\r\n * Validate an array of the specified type.\r\n *\r\n * This does not validate instances of types. All class instances\r\n * of classes will simply objects.\r\n */\r\nexport class TypeArray<T> implements TypeValidator {\r\n  private typeName: string;\r\n\r\n  protected typeOf: string;\r\n\r\n  constructor(typeName: string, example: T) {\r\n    this.typeName = typeName;\r\n    this.typeOf = typeof example;\r\n  }\r\n\r\n  is(u: unknown): u is T {\r\n    if (Array.isArray(u)) {\r\n      if (u.length > 0) {\r\n        return u.every((val) => typeof val === this.typeOf);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getType(): string {\r\n    return this.typeName;\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a value is a number and is greater or eval than a minimum.\r\n */\r\nexport class NumberWithMinimum extends Type<number> {\r\n  readonly min: number;\r\n\r\n  constructor(min: number) {\r\n    super(`number with minimum value of ${ min }`, 0);\r\n    this.min = min;\r\n  }\r\n\r\n  override is(u: unknown): u is number {\r\n    return typeof u === this.typeOf && (u as number) >= this.min;\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a value is a string and it matches the given expression.\r\n */\r\nexport class StringMatchingRegex extends Type<string> {\r\n  readonly expression: RegExp;\r\n\r\n  constructor(expression: RegExp) {\r\n    super(`string matching ${ expression }`, '');\r\n    this.expression = expression;\r\n  }\r\n\r\n  override is(u: unknown): u is string {\r\n    return !!(u as string).match(this.expression);\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a value is a function.\r\n */\r\nexport class Function implements TypeValidator {\r\n  is(u: unknown): u is (...args: any[]) => void {\r\n    // We cannot inspect the parameters and there isn't really\r\n    // a generic function type we can instantiate.\r\n    // So the type guard is here just to make TS comfortable\r\n    // calling something after using this guard.\r\n    return typeof u === 'function';\r\n  }\r\n\r\n  getType(): string {\r\n    return 'function';\r\n  }\r\n}\r\n\r\nexport class NullableBoolean implements TypeValidator {\r\n  is(u: unknown): boolean {\r\n    return typeof u === 'boolean' || typeof u === 'undefined' || u === null;\r\n  }\r\n\r\n  getType(): string {\r\n    return 'boolean | undefined | null';\r\n  }\r\n}\r\n\r\nexport class UserValidator implements TypeValidator {\r\n  messages: string[] = [];\r\n\r\n  is(u: unknown): boolean {\r\n    if (typeof u !== 'object' || u === null) {\r\n      this.messages.push(OptionMessages.mandatory('user'));\r\n      return false;\r\n    }\r\n\r\n    const user = u as any;\r\n\r\n    if (typeof user.keyId !== 'string' || user.keyId.trim() === '') {\r\n      this.messages.push(OptionMessages.mandatory('user.keyId'));\r\n      return false;\r\n    }\r\n\r\n    if (typeof user.name !== 'string' || user.name.trim() === '') {\r\n      this.messages.push(OptionMessages.mandatory('user.name'));\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getType(): string {\r\n    return 'user';\r\n  }\r\n}\r\n\r\n// Our reference SDK, Go, parses date/time strings with the time.RFC3339Nano format.\r\n// This regex should match strings that are valid in that format, and no others.\r\n// Acceptable:\r\n//   2019-10-31T23:59:59Z, 2019-10-31T23:59:59.100Z,\r\n//   2019-10-31T23:59:59-07, 2019-10-31T23:59:59-07:00, etc.\r\n// Unacceptable: no \"T\", no time zone designation\r\nconst DATE_REGEX = /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d\\d*)?(Z|[-+]\\d\\d(:\\d\\d)?)/;\r\n\r\n/**\r\n * Validate a value is a date. Values which are numbers are treated as dates and any string\r\n * which if compliant with `time.RFC3339Nano` is a date.\r\n */\r\nexport class DateValidator implements TypeValidator {\r\n  is(u: unknown): boolean {\r\n    return typeof u === 'number' || (typeof u === 'string' && DATE_REGEX.test(u));\r\n  }\r\n\r\n  getType(): string {\r\n    return 'date';\r\n  }\r\n}\r\n\r\n/**\r\n * Validates that a string is a valid kind.\r\n */\r\nexport class KindValidator extends StringMatchingRegex {\r\n  constructor() {\r\n    super(/^(\\w|\\.|-)+$/);\r\n  }\r\n\r\n  override is(u: unknown): u is string {\r\n    return super.is(u) && u !== 'kind';\r\n  }\r\n}\r\n\r\n/**\r\n * A set of standard type validators.\r\n */\r\nexport class TypeValidators {\r\n  static readonly String = new Type<string>('string', '');\r\n\r\n  static readonly Number = new Type<number>('number', 0);\r\n\r\n  static readonly ObjectOrFactory = new FactoryOrInstance();\r\n\r\n  static readonly Object = new Type<object>('object', {});\r\n\r\n  static readonly StringArray = new TypeArray<string>('string[]', '');\r\n\r\n  static readonly Boolean = new Type<boolean>('boolean', true);\r\n\r\n  static readonly User = new Type<object>('object', {});\r\n\r\n  static readonly Function = new Function();\r\n\r\n  static createTypeArray<T>(typeName: string, example: T) {\r\n    return new TypeArray<T>(typeName, example);\r\n  }\r\n\r\n  static numberWithMin(min: number): NumberWithMinimum {\r\n    return new NumberWithMinimum(min);\r\n  }\r\n\r\n  static stringMatchingRegex(expression: RegExp): StringMatchingRegex {\r\n    return new StringMatchingRegex(expression);\r\n  }\r\n\r\n  static readonly Date = new DateValidator();\r\n\r\n  static readonly Kind = new KindValidator();\r\n  static readonly NullableBoolean = new NullableBoolean();\r\n}","export * from './ClientContext';\r\nexport * from './IClientContext';\r\nexport * from './IOptions';\r\nexport * from './IUser';\r\nexport * from './IValidatedOptions';\r\nexport * from './OptionMessages';\r\nexport * from './UserBuilder';\r\nexport * from './Validators';","import { IInfo, IPlatformData, ISdkData } from \"../IInfo\";\r\nimport { name, version } from '../../version';\r\n\r\n\r\nexport default class BrowserInfo implements IInfo {\r\n  get appType(): string {\r\n    return 'Browser-Client-SDK';\r\n  }\r\n\r\n  platformData(): IPlatformData {\r\n    return {\r\n      os: {},\r\n      name: 'Browser',\r\n      additional: {},\r\n    };\r\n  }\r\n\r\n  sdkData(): ISdkData {\r\n    return {\r\n      name: name,\r\n      version: version,\r\n      userAgentBase: this.appType\r\n    };\r\n  }\r\n}","import { IPlatform } from \"../IPlatform\";\r\nimport { IInfo } from \"../IInfo\";\r\nimport { IRequests } from \"../requests\";\r\nimport { IOptions } from \"../../options/IOptions\";\r\nimport BrowserInfo from \"./BrowserInfo\";\r\nimport BrowserRequests from \"./BrowserRequests\";\r\nimport { IWebSocketWithEvents } from \"../IWebSocket\";\r\nimport BrowserWebSocket from \"./BrowserWebSocket\";\r\n\r\nexport default class BrowserPlatform implements IPlatform {\r\n  info: IInfo = new BrowserInfo();\r\n\r\n  requests: IRequests;\r\n  webSocket: IWebSocketWithEvents;\r\n\r\n  constructor(options: IOptions) {\r\n    this.requests = new BrowserRequests();\r\n    this.webSocket = new BrowserWebSocket();\r\n  }\r\n}","import { IRequestOptions, IRequests } from \"../requests\";\r\n\r\nexport default class BrowserRequests implements IRequests {\r\n  fetch(url: string, options: IRequestOptions = {}): Promise<any> {\r\n    return fetch(url, options);\r\n  }\r\n}","import { IWebSocket, IWebSocketConfig } from \"../IWebSocket\";\r\nimport { Emits } from \"../../utils/Emits\";\r\nimport { IEventEmitter } from \"../../utils/IEventEmitter\";\r\nimport { EventEmitter } from \"../../utils/EventEmitter\";\r\nimport { generateConnectionToken } from \"../../data-sync/utils\";\r\nimport { StreamResponseEventType } from \"../../data-sync/types\";\r\nimport { IUser } from \"../../options/IUser\";\r\n\r\nconst socketConnectionIntervals = [1000, 3000, 5000, 7000, 11000, 13000, 30000, 60000];\r\n\r\nclass BrowserWebSocket implements IWebSocket {\r\n  emitter: IEventEmitter;\r\n  private ws?: WebSocket;\r\n  private retryCounter = 0;\r\n  private closed: boolean = false;\r\n\r\n  private _config: IWebSocketConfig = {} as IWebSocketConfig;\r\n\r\n  constructor() {\r\n    this.emitter = new EventEmitter();\r\n  }\r\n\r\n  identify(user: IUser) {\r\n    this._config.user = user;\r\n    this.doDataSync();\r\n  }\r\n\r\n  connect() {\r\n    let that = this;\r\n    const startTime = Date.now();\r\n    const url = this._config.streamingUri.replace(/^http/, 'ws') + `?type=client&token=${ generateConnectionToken(this._config.sdkKey) }`;\r\n    this.ws = new WebSocket(url);\r\n\r\n    // Connection opened\r\n    that.ws?.addEventListener('open', function (this: WebSocket, event) {\r\n      // this is the websocket instance to which the current listener is binded to, it's different from that.socket\r\n      that._config.logger.info(`WebSocket connection succeeded, connection time: ${ Date.now() - startTime } ms`);\r\n      that.doDataSync();\r\n      that.sendPingMessage();\r\n    });\r\n\r\n    // Connection closed\r\n    that.ws?.addEventListener('close', function (event) {\r\n      that._config.logger.warn('WebSocket closed');\r\n      if (event.code === 4003) { // do not reconnect when 4003\r\n        return;\r\n      }\r\n\r\n      that.reconnect();\r\n    });\r\n\r\n    // Connection error\r\n    that.ws?.addEventListener('error', function (event) {\r\n      // reconnect\r\n      that._config.logger.debug('error');\r\n    });\r\n\r\n    // Listen for messages\r\n    that.ws?.addEventListener('message', function (event) {\r\n      const message = JSON.parse(event.data as string);\r\n      if (message.messageType === 'data-sync') {\r\n        switch (message.data.eventType) {\r\n          case StreamResponseEventType.patch:\r\n            that.emitter.emit('patch', message);\r\n            break;\r\n          case StreamResponseEventType.full:\r\n            that.emitter.emit('put', message);\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.closed = true;\r\n    this.ws?.close(4003, 'The client is closed by user');\r\n    this.ws = undefined;\r\n  }\r\n\r\n  config(param: IWebSocketConfig) {\r\n    if (param.emitter) {\r\n      this.emitter = param.emitter;\r\n    }\r\n\r\n    this._config = {...param};\r\n  }\r\n\r\n  private sendPingMessage() {\r\n    const payload = {\r\n      messageType: 'ping',\r\n      data: null\r\n    };\r\n\r\n    setTimeout(() => {\r\n      try {\r\n        if (this.ws?.readyState === WebSocket.OPEN) {\r\n          this._config.logger.debug('sending ping')\r\n          this.ws.send(JSON.stringify(payload));\r\n          this.sendPingMessage();\r\n        } else {\r\n          this._config.logger.debug(`socket closed at ${ new Date() }`);\r\n        }\r\n      } catch (err) {\r\n        this._config.logger.debug(err);\r\n      }\r\n    }, this._config.pingInterval);\r\n  }\r\n\r\n  private doDataSync() {\r\n    const payload = {\r\n      messageType: 'data-sync',\r\n      data: {\r\n        timestamp: this._config.getStoreTimestamp(),\r\n        user: this._config.user\r\n      }\r\n    };\r\n\r\n    try {\r\n      if (this.ws?.readyState === WebSocket.OPEN) {\r\n        this._config.logger.debug('requesting data');\r\n        this.ws?.send(JSON.stringify(payload));\r\n      } else {\r\n        this._config.logger.error(`not requesting data because socket not open`);\r\n      }\r\n    } catch (err) {\r\n      this._config.logger.debug(err);\r\n    }\r\n  }\r\n\r\n  private reconnect() {\r\n    if (!this.closed) {\r\n      this.ws = undefined;\r\n      const waitTime = socketConnectionIntervals[Math.min(this.retryCounter++, socketConnectionIntervals.length - 1)];\r\n      this._config.logger.info(`The client will try to reconnect in ${ waitTime } milliseconds.`);\r\n      setTimeout(() => {\r\n        this._config.logger.info(`The client is trying to reconnect, flag evaluation results may be stale until reconnected, waited for: ${ waitTime } milliseconds`);\r\n        this.connect();\r\n      }, waitTime);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Emits(BrowserWebSocket);","import { FbClientCore } from \"../../FbClientCore\";\r\nimport { IOptions } from \"../../options/IOptions\";\r\nimport { BasicLogger } from \"../../logging/BasicLogger\";\r\nimport { EventEmitter } from \"../../utils/EventEmitter\";\r\nimport SafeLogger from \"../../logging/SafeLogger\";\r\nimport { Emits } from \"../../utils/Emits\";\r\nimport { IEventEmitter } from \"../../utils/IEventEmitter\";\r\nimport BrowserPlatform from \"./BrowserPlatform\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nclass FbClient extends FbClientCore {\r\n  emitter: IEventEmitter;\r\n\r\n  constructor(options: IOptions) {\r\n    const fallbackLogger = new BasicLogger({\r\n      level: 'none',\r\n      destination: console.log\r\n    });\r\n\r\n    const logger = options.logger ? new SafeLogger(options.logger, fallbackLogger) : fallbackLogger;\r\n\r\n    const emitter = new EventEmitter(logger);\r\n\r\n    super(\r\n      {...options, logger},\r\n      new BrowserPlatform({...options, logger}),\r\n      {\r\n        onError: (err: Error) => {\r\n          if (emitter.listenerCount('error')) {\r\n            emitter.emit('error', err);\r\n          }\r\n        },\r\n        onFailed: (err: Error) => {\r\n          emitter.emit('failed', err);\r\n        },\r\n        onReady: () => {\r\n          emitter.emit('ready');\r\n        },\r\n        onUpdate: (key: string) => {\r\n          emitter.emit('update', {key});\r\n          emitter.emit(`update:${ key }`, {key});\r\n        },\r\n        hasEventListeners: () =>\r\n          emitter\r\n            .eventNames()\r\n            .some(\r\n              (name) =>\r\n                name === 'update' || (typeof name === 'string' && name.startsWith('update:')),\r\n            ),\r\n      },\r\n    );\r\n\r\n    this.emitter = emitter;\r\n  }\r\n}\r\n\r\nexport default Emits(FbClient);","import { IDataKind } from \"../../IDataKind\";\r\nimport {\r\n  StoreStorageKey,\r\n  IKeyedStoreItem,\r\n  IStoreDataStorage,\r\n  IStoreItem,\r\n  IStoreKindData,\r\n  CurrentUserStorageKey\r\n} from \"../../store/store\";\r\nimport { IStore } from \"../../platform/IStore\";\r\nimport { IUser } from \"../../options/IUser\";\r\nimport { ILogger } from \"../../logging/ILogger\";\r\nimport { IOptions } from \"../../options/IOptions\";\r\nimport { serializeUser } from \"../../utils/serializeUser\";\r\n\r\nexport default class LocalStorageStore implements IStore {\r\n  private store: IStoreDataStorage  = {} as IStoreDataStorage;\r\n\r\n  private initCalled = false;\r\n\r\n  private _user: IUser = {} as IUser;\r\n\r\n  private logger: ILogger;\r\n\r\n  constructor(options: IOptions) {\r\n    this.logger = options.logger!;\r\n  }\r\n\r\n  identify(user: IUser) {\r\n    this._user = {...user};\r\n\r\n    localStorage.setItem(CurrentUserStorageKey, serializeUser(this._user));\r\n    this.loadStoreFromStorage();\r\n  }\r\n\r\n  get user(): IUser {\r\n    return this._user;\r\n  }\r\n\r\n  private addItem(kind: IDataKind, key: string, item: IStoreItem) {\r\n    let items = this.store[kind.namespace];\r\n    if (!items) {\r\n      items = {};\r\n      this.store[kind.namespace] = items;\r\n    }\r\n    if (Object.hasOwnProperty.call(items, key)) {\r\n      const old = items[key];\r\n      if (!old || old.version < item.version) {\r\n        items[key] = item;\r\n      }\r\n    } else {\r\n      items[key] = item;\r\n    }\r\n\r\n    if (item.version > this.store.version) {\r\n      this.store.version = item.version;\r\n    }\r\n\r\n    this.dumpStoreToStorage();\r\n  }\r\n\r\n  get(kind: IDataKind, key: string): IStoreItem | null {\r\n    const items = this.store[kind.namespace];\r\n    if (items) {\r\n      if (Object.prototype.hasOwnProperty.call(items, key)) {\r\n        const item = items[key];\r\n        if (item) {\r\n          return item;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  all(kind: IDataKind): [IStoreKindData, number] {\r\n    const result: IStoreKindData = {};\r\n    const items = this.store[kind.namespace] ?? {};\r\n    Object.entries(items).forEach(([key, item]) => {\r\n      if (item) {\r\n        result[key] = <IStoreItem>item;\r\n      }\r\n    });\r\n\r\n    return [result, this.store.version];\r\n  }\r\n\r\n  init(allData: IStoreDataStorage, callback: () => void): void {\r\n    this.store = allData as IStoreDataStorage;\r\n\r\n    Object.keys(allData).map(namespace => {\r\n      Object.entries(allData[namespace]).forEach(([_, item]) => {\r\n        const ele = item as IStoreItem;\r\n        if (ele.version > this.store.version) {\r\n          this.store.version = ele.version;\r\n        }\r\n      })\r\n    });\r\n\r\n    this.dumpStoreToStorage();\r\n    this.initCalled = true;\r\n    callback?.();\r\n  }\r\n\r\n  upsert(kind: IDataKind, data: IKeyedStoreItem, callback: () => void): void {\r\n    this.addItem(kind, data.key, data);\r\n    callback?.();\r\n  }\r\n\r\n  initialized(): boolean {\r\n    return this.initCalled;\r\n  }\r\n\r\n  /* eslint-disable class-methods-use-this */\r\n  close(): void {\r\n    // For the memory store this is a no-op.\r\n  }\r\n\r\n  getDescription(): string {\r\n    return 'local-storage-store'\r\n  }\r\n\r\n  get version(): number {\r\n    return this.store.version;\r\n  }\r\n\r\n  private dumpStoreToStorage(): void {\r\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\r\n    localStorage.setItem(storageKey, JSON.stringify(this.store));\r\n  }\r\n\r\n  private loadStoreFromStorage(): void {\r\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\r\n    const dataStoreStr = localStorage.getItem(storageKey);\r\n    let store: IStoreDataStorage | null = null;\r\n\r\n    try {\r\n      if (dataStoreStr && dataStoreStr.trim().length > 0) {\r\n        store = JSON.parse(dataStoreStr);\r\n      }\r\n    } catch (err) {\r\n      this.logger.error(`error while loading local data store: ${storageKey}`, err);\r\n    }\r\n\r\n    if (!!store) {\r\n      this.store = store;\r\n    } else {\r\n      this.store = {\r\n        flags: {},\r\n        version: 0\r\n      };\r\n    }\r\n  }\r\n}","export * from './IInfo';\r\nexport * from './IPlatform';\r\nexport * from './IWebSocket';\r\nexport * from './requests';","import { IDataKind } from \"../IDataKind\";\r\n\r\nexport default class DataKinds {\r\n  static readonly Flags: IDataKind = {\r\n    namespace: 'flags'\r\n  };\r\n}","import { IDataKind } from \"../IDataKind\";\r\nimport { StoreStorageKey, IKeyedStoreItem, IStoreDataStorage, IStoreItem, IStoreKindData } from \"./store\";\r\nimport { IStore } from \"../platform/IStore\";\r\nimport { IUser } from \"../options/IUser\";\r\nimport { IOptions } from \"../options/IOptions\";\r\n\r\nexport default class InMemoryStore implements IStore {\r\n\r\n  private allStores: { [DataStoreStorageKey: string]: IStoreDataStorage } = {};\r\n\r\n  private store: IStoreDataStorage  = {} as IStoreDataStorage;\r\n\r\n  private initCalled = false;\r\n\r\n  private _user: IUser = {} as IUser;\r\n\r\n  constructor(options: IOptions) {}\r\n\r\n  identify(user: IUser) {\r\n    this._user = {...user};\r\n\r\n    this.store = this.allStores[`${StoreStorageKey}-${this._user.keyId}`] ?? { flags: {}, version: 0 };\r\n  }\r\n\r\n  get user(): IUser {\r\n    return this._user;\r\n  }\r\n\r\n  private addItem(kind: IDataKind, key: string, item: IStoreItem) {\r\n    let items = this.store[kind.namespace];\r\n    if (!items) {\r\n      items = {};\r\n      this.store[kind.namespace] = items;\r\n    }\r\n    if (Object.hasOwnProperty.call(items, key)) {\r\n      const old = items[key];\r\n      if (!old || old.version < item.version) {\r\n        items[key] = item;\r\n      }\r\n    } else {\r\n      items[key] = item;\r\n    }\r\n\r\n    if (item.version > this.store.version) {\r\n      this.store.version = item.version;\r\n    }\r\n\r\n    this.allStores[`${StoreStorageKey}-${this._user.keyId}`] = {...this.store};\r\n  }\r\n\r\n  get(kind: IDataKind, key: string): IStoreItem | null {\r\n    const items = this.store[kind.namespace];\r\n    if (items) {\r\n      if (Object.prototype.hasOwnProperty.call(items, key)) {\r\n        const item = items[key];\r\n        if (item) {\r\n          return item;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  all(kind: IDataKind): [IStoreKindData, number] {\r\n    const result: IStoreKindData = {};\r\n    const items = this.store[kind.namespace] ?? {};\r\n    Object.entries(items).forEach(([key, item]) => {\r\n      if (item) {\r\n        result[key] = <IStoreItem>item;\r\n      }\r\n    });\r\n\r\n    return [result, this.store.version];\r\n  }\r\n\r\n  init(allData: IStoreDataStorage, callback: () => void): void {\r\n    this.store = allData as IStoreDataStorage;\r\n\r\n    this.store.version = 0;\r\n    Object.keys(allData).map(namespace => {\r\n      Object.entries(allData[namespace]).forEach(([_, item]) => {\r\n        const ele = item as IStoreItem;\r\n        if (ele.version > this.store.version) {\r\n          this.store.version = ele.version;\r\n        }\r\n      })\r\n    });\r\n\r\n    this.allStores[`${StoreStorageKey}-${this._user.keyId}`] = {...this.store};\r\n    this.initCalled = true;\r\n    callback?.();\r\n  }\r\n\r\n  upsert(kind: IDataKind, data: IKeyedStoreItem, callback: () => void): void {\r\n    this.addItem(kind, data.key, data);\r\n    callback?.();\r\n  }\r\n\r\n  initialized(): boolean {\r\n    return this.initCalled;\r\n  }\r\n\r\n  /* eslint-disable class-methods-use-this */\r\n  close(): void {\r\n    // For the memory store this is a no-op.\r\n  }\r\n\r\n  getDescription(): string {\r\n    return 'in-memory-store';\r\n  }\r\n\r\n  get version(): number {\r\n    return this.store.version;\r\n  }\r\n}","export * from './DataKinds';\r\nexport * from './IDataSourceUpdates';\r\nexport * from './InMemoryStore';\r\nexport * from './serialization';\r\nexport * from './store';","import { IFlag } from \"../evaluation/data/IFlag\";\r\nimport DataKinds from \"./DataKinds\";\r\nimport { IVersionedData } from \"../IVersionedData\";\r\nimport { IDataKind } from \"../IDataKind\";\r\n\r\nexport interface Flags {\r\n  flags: { [name: string]: IFlag };\r\n}\r\n\r\ntype VersionedFlag = IVersionedData & IFlag;\r\n\r\nexport interface IPatchData {\r\n  data: VersionedFlag;\r\n  kind: IDataKind;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function deserializeAll(flags: IFlag[]): Flags {\r\n  const result = {\r\n    [DataKinds.Flags.namespace]: {}\r\n  };\r\n\r\n  if (flags?.length) {\r\n    result[DataKinds.Flags.namespace] = flags.reduce((acc: any, cur: any) => {\r\n      acc[cur.id] = {...cur, version: cur.timestamp || 0, key: cur.id, variations: cur.variationOptions};\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  return result as any as Flags;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function deserializePatch(flags: IFlag[]): IPatchData[] {\r\n  const result = [\r\n    ...flags?.map(item => ({\r\n      data: {\r\n        ...item,\r\n        version:item.timestamp,\r\n        key: item.id,\r\n        variations: item.variationOptions\r\n      },\r\n      kind: DataKinds.Flags\r\n    })) || []\r\n  ];\r\n\r\n  return result as any as IPatchData[];\r\n}\r\n","export const StoreStorageKey = 'fb-datastore';\r\n\r\nexport const CurrentUserStorageKey = 'fb-user';\r\n\r\n/**\r\n * Represents an item which can be stored in the feature store.\r\n */\r\nexport interface IStoreItem {\r\n  version: number;\r\n\r\n  // The actual data associated with the item.\r\n  [attribute: string]: any;\r\n}\r\n\r\n/**\r\n * When upserting an item it must contain a key.\r\n */\r\nexport interface IKeyedStoreItem extends IStoreItem {\r\n  key: string;\r\n}\r\n\r\n/**\r\n * Represents the storage for a single kind of data. e.g. 'flag' or 'segment'.\r\n */\r\nexport interface IStoreKindData {\r\n  [key: string]: IStoreItem;\r\n}\r\n\r\n/**\r\n * Represents the storage for the full data store.\r\n */\r\nexport interface IStoreDataStorage {\r\n  flags: IStoreKindData;\r\n  version: number;\r\n\r\n  // This attribute is to ingore the type check error\r\n  [attribute: string]: any;\r\n}","import { IEventEmitter } from \"./IEventEmitter\";\r\n\r\nexport type EventableConstructor<T = {}> = new (...args: any[]) => T;\r\nexport type Eventable = EventableConstructor<{ emitter: IEventEmitter }>;\r\n\r\n/**\r\n * Adds the implementation of an event emitter to something that contains\r\n * a field of `emitter` with type `EventEmitter`.\r\n * @param Base The class to derive the mixin from.\r\n * @returns A class extending the base with an event emitter.\r\n */\r\nexport function Emits<TBase extends Eventable>(Base: TBase) {\r\n  return class WithEvents extends Base implements IEventEmitter {\r\n    on(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.on(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    addListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.addListener(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    once(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.once(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    removeListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.removeListener(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    off(eventName: string | symbol, listener: (...args: any) => void, context?: any): this {\r\n      this.emitter.off(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    removeAllListeners(event?: string | symbol): this {\r\n      this.emitter.removeAllListeners(event);\r\n      return this;\r\n    }\r\n\r\n    listeners(eventName: string | symbol): Function[] {\r\n      return this.emitter.listeners(eventName);\r\n    }\r\n\r\n    emit(eventName: string | symbol, ...args: any[]): this  {\r\n      this.emitter.emit(eventName, args);\r\n      return this;\r\n    }\r\n\r\n    listenerCount(eventName: string | symbol): number {\r\n      return this.emitter.listenerCount(eventName);\r\n    }\r\n\r\n    prependListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.prependListener(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    prependOnceListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.prependOnceListener(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    eventNames(): (string | symbol)[] {\r\n      return this.emitter.eventNames();\r\n    }\r\n\r\n    maybeReportError (error: any): this {\r\n      this.emitter.maybeReportError(error);\r\n      return this;\r\n    }\r\n  };\r\n}","import { ILogger } from \"../logging/ILogger\";\r\nimport { IEventEmitter } from \"./IEventEmitter\";\r\n\r\ninterface Events {\r\n  [key: string | symbol]: {\r\n    handler: (...args: any[]) => void;\r\n    context: any;\r\n  }[];\r\n}\r\n\r\nexport class EventEmitter implements IEventEmitter {\r\n  private events: Events = {};\r\n\r\n  constructor(private logger?: ILogger) {}\r\n\r\n  private listeningTo (event: string) {\r\n    return !!this.events[event];\r\n  }\r\n\r\n  on (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    this.events[event] = this.events[event] || [];\r\n    this.events[event] = this.events[event].concat({\r\n      handler: handler,\r\n      context: context,\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  addListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    return this.on(event, handler, context);\r\n  }\r\n\r\n  once (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    const onceHandler = (...args: any[]) => {\r\n      this.off(event, onceHandler, context);\r\n      handler.apply(context, args);\r\n    };\r\n    return this.on(event, onceHandler, context);\r\n  }\r\n\r\n  off (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    if (!this.events[event]) {\r\n      return this;\r\n    }\r\n    for (let i = 0; i < this.events[event].length; i++) {\r\n      if (this.events[event][i].handler === handler && this.events[event][i].context === context) {\r\n        this.events[event] = this.events[event].slice(0, i).concat(this.events[event].slice(i + 1));\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  removeListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    return this.off(event, handler, context);\r\n  }\r\n\r\n  removeAllListeners (event?: string | symbol): this {\r\n    if (event) {\r\n      delete this.events[event];\r\n    } else {\r\n      this.events = {};\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  listeners (event: string | symbol): Function[] {\r\n    return this.events[event] ? this.events[event].map((event) => event.handler) : [];\r\n  }\r\n\r\n  emit (event: string | symbol, ...args: any[]): this {\r\n    if (!this.events[event]) {\r\n      return this;\r\n    }\r\n    // Copy the list of handlers before iterating, in case any handler adds or removes another handler.\r\n    // Any such changes should not affect what we do here-- we want to notify every handler that existed\r\n    // at the moment that the event was fired.\r\n    const copiedHandlers = [...this.events[event]];\r\n    for (let i = 0; i < copiedHandlers.length; i++) {\r\n      copiedHandlers[i].handler.apply(copiedHandlers[i].context, Array.prototype.slice.call(arguments, 1));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  listenerCount (event: string | symbol): number {\r\n    return this.events[event] ? this.events[event].length : 0;\r\n  }\r\n\r\n  prependListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    this.events[event] = this.events[event] || [];\r\n    this.events[event] = [\r\n      {\r\n        handler: handler,\r\n        context: context,\r\n      },\r\n      ...this.events[event]\r\n    ];\r\n\r\n    return this;\r\n  }\r\n\r\n  prependOnceListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    const onceHandler = (...args: any[]) => {\r\n      this.off(event, onceHandler, context);\r\n      handler.apply(context, args);\r\n    };\r\n    return this.prependListener(event, onceHandler, context);\r\n  }\r\n\r\n  eventNames (): (string | symbol)[] {\r\n    return Object.keys(this.events);\r\n  }\r\n\r\n  maybeReportError (error: any): this {\r\n    if (!error) {\r\n      return this;\r\n    }\r\n    if (this.listeningTo('error')) {\r\n      this.emit('error', error);\r\n    } else {\r\n      this.logger?.error(error);\r\n    }\r\n\r\n    return this;\r\n  }\r\n}","import { isNullOrUndefined } from \"./isNullOrUndefined\";\r\n\r\nexport class Regex {\r\n  private static patternWithFlags = /\\/(.*)\\/([a-z]*)/i;\r\n  private static whiteSpaceRegex = /\\s/g;\r\n\r\n  static fromString(patternString: string): RegExp {\r\n    let flags = '';\r\n    const match = patternString.match(Regex.patternWithFlags);\r\n\r\n    if (match) {\r\n      patternString = match[1]; // Update the pattern string\r\n      flags = match[2]; // Update the flags\r\n    }\r\n\r\n    return new RegExp(patternString, flags);\r\n  }\r\n\r\n  static isNullOrWhiteSpace(str: string) {\r\n    return isNullOrUndefined(str) || !str.replace(Regex.whiteSpaceRegex, '').length;\r\n  }\r\n}","import { Regex } from \"./Regex\";\r\n\r\nexport interface IConvertResult<TValue> {\r\n  isSucceeded: boolean,\r\n  value?: TValue\r\n}\r\n\r\nexport class ValueConverters {\r\n  static bool(value: string): IConvertResult<boolean> {\r\n    if (value?.toUpperCase() === 'TRUE') {\r\n      return ValueConverters.success<boolean>(true);\r\n    }\r\n\r\n    if (value?.toUpperCase() === 'FALSE') {\r\n      return ValueConverters.success<boolean>(false);\r\n    }\r\n\r\n    return ValueConverters.error<boolean>();\r\n  }\r\n\r\n  static number(value: string): IConvertResult<number> {\r\n    const num = Number(value);\r\n\r\n    if (Number.isNaN(num)) {\r\n      return ValueConverters.error<number>();\r\n    }\r\n\r\n    return ValueConverters.success<number>(num);\r\n  }\r\n\r\n  static string(value: string): IConvertResult<string> {\r\n    return ValueConverters.success<string>(value);\r\n  }\r\n\r\n  static json(value: string): IConvertResult<unknown> {\r\n    try {\r\n      const val = JSON.parse(value);\r\n      return ValueConverters.success<unknown>(val);\r\n    } catch (err) {\r\n      return ValueConverters.error<unknown>();\r\n    }\r\n  }\r\n\r\n  private static success<TValue>(value: TValue): IConvertResult<TValue> {\r\n    return {\r\n      isSucceeded: true,\r\n      value: value\r\n    }\r\n  }\r\n\r\n  private static error<TValue>(): IConvertResult<TValue> {\r\n    return {\r\n      isSucceeded: false\r\n    }\r\n  }\r\n}","// This function is designed to remove any trailing forward slashes at the end of the provided URI string\r\nexport function canonicalizeUri(uri: string): string {\r\n  return uri.replace(/\\/+$/, '');\r\n}","import { IInfo } from \"../platform/IInfo\";\r\n\r\nexport type Headers = {\r\n  Authorization: string;\r\n  'User-Agent': string;\r\n  'Content-Type': string;\r\n};\r\n\r\nexport function defaultHeaders(\r\n  sdkKey: string,\r\n  info: IInfo\r\n): Headers {\r\n  const {userAgentBase, version} = info.sdkData();\r\n\r\n  const headers: Headers = {\r\n    'Content-Type': 'application/json',\r\n    'User-Agent': `${ userAgentBase ?? info.appType }/${ version }`,\r\n    'Authorization': sdkKey\r\n  };\r\n\r\n  return headers;\r\n}\r\n\r\nexport function httpErrorMessage(\r\n  err: {\r\n    status: number;\r\n    message: string;\r\n  },\r\n  context: string,\r\n  retryMessage?: string,\r\n): string {\r\n  let desc;\r\n  if (err.status) {\r\n    desc = `error ${ err.status }${ err.status === 401 ? ' (invalid SDK key)' : '' }`;\r\n  } else {\r\n    desc = `I/O error (${ err.message || err })`;\r\n  }\r\n  const action = retryMessage ?? 'giving up permanently';\r\n  return `Received ${ desc } for ${ context } - ${ action }`;\r\n}\r\n","export * from './isNullOrUndefined';\r\nexport * from './sleep';\r\nexport * from './ValueConverters';\r\nexport * from './VoidFunction';","export function isNullOrUndefined(val: any) {\r\n  return val === null || val === undefined;\r\n}","import { IUser } from \"../options/IUser\";\r\n\r\nexport function serializeUser(user: IUser | undefined): string {\r\n  if (!user) {\r\n    return '';\r\n  }\r\n\r\n  const builtInProperties = `${user.keyId},${user.name}`;\r\n\r\n  const customizedProperties = user.customizedProperties\r\n    ?.sort((a, b) => {\r\n      const nameA = a.name.toLowerCase();\r\n      const nameB = b.name.toLowerCase();\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    })\r\n    .map(p => `${p.name}:${p.value}`)\r\n    .join(',');\r\n\r\n  return `${builtInProperties},${customizedProperties}`;\r\n}","const sleep = async (delayMillis: number = 1000) =>\r\n  new Promise((resolve) => {\r\n    setTimeout(resolve, delayMillis);\r\n  });\r\n\r\nexport default sleep;","export const version = \"1.0.0\"; export const name = \"@featbit/js-client-sdk\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(9872);\n"],"names":["root","factory","exports","module","define","amd","a","i","this","validations","startWaitTime","TypeValidators","Number","sdkKey","String","pollingUri","streamingUri","eventsUri","webSocketPingInterval","logger","Object","store","ObjectOrFactory","dataSynchronizer","flushInterval","maxEventsInQueue","pollingInterval","offline","Boolean","dataSyncMode","bootstrapProvider","user","User","defaultValues","DataSyncModeEnum","STREAMING","sendEvents","options","NullBootstrapProvider","undefined","constructor","errors","validatedOptions","keys","forEach","optionName","optionValue","validator","is","getType","push","wrongOptionTypeBoolean","NumberWithMinimum","min","optionBelowMinimum","UserValidator","messages","wrongOptionType","warn","unknownOption","validateTypesAndNames","error","streamingUriMissing","isNullOrUndefined","EmptyString","pollingUriMissing","eventsUriMissing","partialEndpoint","POLLING","validateEndpoints","canonicalizeUri","info","Function","dataSynchronizerFactory","storeFactory","Context","valid","message","fromUser","contextForError","keyId","name","trim","context","_user","value","property","customizedProperties","find","x","_options","build","mode","useJsonBootstrapProvider","jsonStr","JsonBootstrapProvider","ClientState","platform","callbacks","state","Initializing","onError","onFailed","onReady","onUpdate","hasEventListeners","config","Error","init","clientContext","identify","dataSourceUpdates","evaluator","populate","eventProcessor","NullEventProcessor","NullDataSynchronizer","initSuccess","DefaultEventProcessor","listeners","createStreamListeners","put","patch","webSocket","version","requests","e","dataSourceErrorHandler","start","setTimeout","initialized","msg","Failed","rejectionReason","initReject","Initialized","waitForInitialization","initializedPromise","Promise","resolve","reject","initResolve","boolVariation","key","defaultValue","evaluateCore","ValueConverters","bool","boolVariationDetail","jsonVariation","json","jsonVariationDetail","numberVariation","number","numberVariationDetail","stringVariation","string","stringVariationDetail","variation","variationDetail","getAllVariations","ClientError","flags","_","all","Flags","result","map","flagKey","evalResult","evaluate","kind","reason","close","track","eventName","metricValue","metricEvent","MetricEvent","appType","record","flush","callback","err","typeConverter","ReasonKinds","FlagNotFound","toEvalEvent","isSucceeded","WrongType","code","JSON","parse","flag","variationOptions","id","data","deserializeAll","dataSet","userKeyId","MinInt","onChange","allData","checkForChanges","doInit","oldData","then","updatedFlags","namespace","oldDataForKind","newDataForKind","mergedData","filter","isUpdated","reduce","acc","set","sendChangeEvents","upsert","doUpsert","oldItem","get","newData","enumerate","itemsByNamespace","remove","items","removeAll","entries","values","mergeFrom","other","bind","createPutListener","onPutCompleteHandler","deserializeData","processJson","initData","debug","createPatchListener","onPatchCompleteHandler","deserializePatch","length","item","onCompleteHandlers","Map","stop","requestor","getStoreTimestamp","errorHandler","stopped","poll","startTime","Date","now","requestData","body","elapsed","sleepFor","Math","max","status","isHttpRecoverable","httpErrorMessage","PollingError","messageType","processStreamResponse","eventType","StreamResponseEventType","full","featureFlags","timeoutHandle","clearTimeout","headers","defaultHeaders","uri","request","requestUrl","res","fetch","text","timestamp","payload","cb","method","stringify","StreamingError","socket","pingInterval","addListener","event","logConnectionStarted","connect","connectionAttemptStartTime","alphabet","encodeNumber","param","s","slice","split","n","join","replace","timestampCode","toString","floor","random","super","UnexpectedResponseError","EvalResult","flagNotFound","matched","val","Match","targetedVariation","variations","v","EvalEvent","sendToExperiment","VariationDataType","OperatorTypes","Operator","operation","func","isMatch","conditionValue","numericOperator","desiredComparisonResult","otherDesiredComparisonResult","param1","param2","param1FloatValue","parseFloat","param2FloatValue","isNaN","sign","op","All","o","LessThan","LessEqualThan","BiggerThan","BiggerEqualThan","Equal","NotEqual","Contains","includes","NotContains","NotContain","StartsWith","startsWith","EndsWith","endsWith","MatchRegex","pattern","Regex","fromString","test","NotMatchRegex","IsOneOf","NotOneOf","IsTrue","toUpperCase","IsFalse","closed","eventQueue","DefaultEventQueue","eventDispatcher","EventDispatcher","flushLoop","flushEvent","FlushEvent","waitForCompletion","shutdown","ShutdownEvent","addEvent","complete","capacity","events","clear","shift","eventsSnapshot","isEmpty","send","retry","DeliveryStatus","Succeeded","FailedAndMustShutDown","serialize","toPayload","queue","maxEventPerRequest","buffer","sender","DefaultEventSender","serializer","DefaultEventSerializer","dispatchLoop","running","PayloadEvent","addEventToBuffer","triggerFlush","snapshot","flushEvents","total","AsyncEvent","isCompletedPromise","resolveFn","getTime","userPayload","metrics","route","numericValue","type","featureFlagKey","LogPriority","none","LevelNames","BasicLogger","logLevel","level","destination","formatter","tryFormat","args","tryWrite","console","log","prefix","loggerRequirements","fallback","tryStringify","prototype","hasOwnProperty","call","TypeError","indexOf","escapes","d","toNumber","parseInt","toInt","f","toFloat","j","O","c","formatString","out","char","charAt","nextChar","configuration","expectedType","actualType","mandatory","_keyId","_name","_custom","custom","propertyName","FactoryOrInstance","factoryOrInstance","Array","isArray","typeOfFactory","Type","typeName","example","typeOf","u","TypeArray","every","StringMatchingRegex","expression","match","NullableBoolean","DATE_REGEX","DateValidator","KindValidator","createTypeArray","numberWithMin","stringMatchingRegex","StringArray","Kind","platformData","os","additional","sdkData","userAgentBase","url","socketConnectionIntervals","Emits","retryCounter","_config","emitter","EventEmitter","doDataSync","that","generateConnectionToken","ws","WebSocket","addEventListener","sendPingMessage","reconnect","emit","readyState","OPEN","waitTime","FbClient","FbClientCore","fallbackLogger","listenerCount","eventNames","some","initCalled","localStorage","setItem","CurrentUserStorageKey","serializeUser","loadStoreFromStorage","addItem","old","dumpStoreToStorage","ele","getDescription","storageKey","StoreStorageKey","dataStoreStr","getItem","DataKinds","allStores","cur","Base","on","listener","once","removeListener","off","removeAllListeners","prependListener","prependOnceListener","maybeReportError","listeningTo","handler","concat","onceHandler","apply","copiedHandlers","arguments","patternString","patternWithFlags","RegExp","isNullOrWhiteSpace","str","whiteSpaceRegex","success","num","retryMessage","desc","sort","b","nameA","toLowerCase","nameB","p","delayMillis","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}